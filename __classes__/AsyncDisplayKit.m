//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ASDisplayNodeFlags {
    unsigned int viewEverHadAGestureRecognizerAttached:1;
    unsigned int layerBacked:1;
    unsigned int displaysAsynchronously:1;
    unsigned int rasterizesSubtree:1;
    unsigned int shouldBypassEnsureDisplay:1;
    unsigned int displaySuspended:1;
    unsigned int shouldAnimateSizeChanges:1;
    unsigned int canClearContentsOfLayer:1;
    unsigned int canCallSetNeedsDisplayOfLayer:1;
    unsigned int implementsDrawRect:1;
    unsigned int implementsImageDisplay:1;
    unsigned int implementsDrawParameters:1;
    unsigned int isEnteringHierarchy:1;
    unsigned int isExitingHierarchy:1;
    unsigned int isInHierarchy:1;
    unsigned int visibilityNotificationsDisabled:4;
    unsigned int isDeallocating:1;
};

struct ASDisplayNodeLayout {
    ASLayout *layout;
    CDStruct_42a63532 constrainedSize;
    struct CGSize parentSize;
    _Bool requestedLayoutFromAbove;
    unsigned long long version;
};

struct ASLayoutElementStyleExtensions {
    _Bool boolExtensions[1];
    long long integerExtensions[4];
    struct UIEdgeInsets edgeInsetsExtensions[1];
};

struct ASPendingStateControllerFlags {
    unsigned int pendingFlush:1;
};

struct ASTextKitAttributes {
    NSAttributedString *attributedString;
    NSAttributedString *truncationAttributedString;
    NSCharacterSet *avoidTailTruncationSet;
    long long lineBreakMode;
    unsigned long long maximumNumberOfLines;
    NSArray *exclusionPaths;
    struct CGSize shadowOffset;
    UIColor *shadowColor;
    double shadowOpacity;
    double shadowRadius;
    NSArray *pointSizeScaleFactors;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct Group {
    CDUnknownFunctionPointerType *_field1;
};

struct Mutex;

struct RecursiveMutex;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> *__next_;
};

struct __shared_weak_count;

struct deque<std::__1::tuple<CGSize, ASTextLayout *>, std::__1::allocator<std::__1::tuple<CGSize, ASTextLayout *>>> {
    struct __split_buffer<std::__1::tuple<CGSize, ASTextLayout *>*, std::__1::allocator<std::__1::tuple<CGSize, ASTextLayout *>*>> {
        struct tuple<CGSize, ASTextLayout *> **__first_;
        struct tuple<CGSize, ASTextLayout *> **__begin_;
        struct tuple<CGSize, ASTextLayout *> **__end_;
        struct __compressed_pair<std::__1::tuple<CGSize, ASTextLayout *>**, std::__1::allocator<std::__1::tuple<CGSize, ASTextLayout *>*>> {
            struct tuple<CGSize, ASTextLayout *> **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::tuple<CGSize, ASTextLayout *>>> {
        unsigned long long __value_;
    } __size_;
};

struct mutex {
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } __m_;
};

struct pair<ASDisplayNode *, unsigned long>;

struct shared_ptr<AS::Mutex> {
    struct Mutex *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<AS::RecursiveMutex> {
    struct RecursiveMutex *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct tuple<CGSize, ASTextLayout *>;

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unordered_map<long, long, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, long>>> {
    struct __hash_table<std::__1::__hash_value_type<long, long>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, long>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, long>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, long>, std::__1::hash<long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, long>, std::__1::equal_to<long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>;

struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__value_;
    } __end_cap_;
};

struct vector<const void *, std::__1::allocator<const void *>> {
    void **__begin_;
    void **__end_;
    struct __compressed_pair<const void **, std::__1::allocator<const void *>> {
        void **__value_;
    } __end_cap_;
};

struct vector<id<ASCATransactionQueueObserving>, std::__1::allocator<id<ASCATransactionQueueObserving>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__strong id<ASCATransactionQueueObserving>*, std::__1::allocator<id<ASCATransactionQueueObserving>>> {
        id *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<ASDisplayNode *, unsigned long>, std::__1::allocator<std::__1::pair<ASDisplayNode *, unsigned long>>> {
    struct pair<ASDisplayNode *, unsigned long> *__begin_;
    struct pair<ASDisplayNode *, unsigned long> *__end_;
    struct __compressed_pair<std::__1::pair<ASDisplayNode *, unsigned long>*, std::__1::allocator<std::__1::pair<ASDisplayNode *, unsigned long>>> {
        struct pair<ASDisplayNode *, unsigned long> *__value_;
    } __end_cap_;
};

struct vector<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>, std::__1::allocator<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>>> {
    struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__begin_;
    struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__end_;
    struct __compressed_pair<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>*, std::__1::allocator<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>>> {
        struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__value_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__value_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _field1;
    void *_field2[32];
} CDStruct_ac21a0f6;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double _field1;
    long long _field2;
    double _field3;
    long long _field4;
} CDStruct_264a827c;

typedef struct {
    long long _field1;
    double _field2;
} CDStruct_7f320dbc;

typedef struct {
    long long horizontalSizeClass;
    long long verticalSizeClass;
    double displayScale;
    long long displayGamut;
    long long userInterfaceIdiom;
    long long forceTouchCapability;
    long long layoutDirection;
    long long userInterfaceStyle;
    NSString *preferredContentSizeCategory;
    struct CGSize containerSize;
} CDStruct_104667ad;

typedef struct {
    CDStruct_7f320dbc _field1;
    CDStruct_7f320dbc _field2;
    CDStruct_7f320dbc _field3;
    CDStruct_7f320dbc _field4;
    CDStruct_7f320dbc _field5;
    CDStruct_7f320dbc _field6;
} CDStruct_99d2e400;

typedef struct {
    CDStruct_7f320dbc _field1;
    CDStruct_7f320dbc _field2;
} CDStruct_69654f45;

typedef struct {
    struct CGSize min;
    struct CGSize max;
} CDStruct_42a63532;

// Template types
typedef struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__value_;
    } __end_cap_;
} vector_b5e32e34;

typedef struct vector<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>, std::__1::allocator<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>>> {
    struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__begin_;
    struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__end_;
    struct __compressed_pair<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>*, std::__1::allocator<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>>> {
        struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__value_;
    } __end_cap_;
} vector_0253d28f;

#pragma mark -

//
// File: AsyncDisplayKit
// UUID: D78E181F-D906-F495-84D3-570090D2341E
//
//                           Arch: arm64
//                Current version: 0.0.0
//          Compatibility version: 0.0.0
//                 Source version: 0.0.0.0.0
//            Minimum iOS version: 9.0.0
//                    SDK version: 13.2.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ASAbsoluteLayoutElement
@property(nonatomic) struct CGPoint layoutPosition;
@end

@protocol ASAccessibilityElementPositioning
@property(readonly, nonatomic) struct CGRect accessibilityFrame;
@end

@protocol ASAsyncTransactionContainer
@property(retain, nonatomic, setter=asyncdisplaykit_setCurrentAsyncTransaction:) _ASAsyncTransaction *asyncdisplaykit_currentAsyncTransaction;
@property(readonly, nonatomic) unsigned long long asyncdisplaykit_asyncTransactionContainerState;
@property(nonatomic, getter=asyncdisplaykit_isAsyncTransactionContainer, setter=asyncdisplaykit_setAsyncTransactionContainer:) _Bool asyncdisplaykit_asyncTransactionContainer;
- (void)asyncdisplaykit_cancelAsyncTransactions;
@end

@protocol ASCATransactionQueueObserving <NSObject>
- (void)prepareForCATransactionCommit;
@end

@protocol ASContextTransitioning <NSObject>
- (void)completeTransition:(_Bool)arg1;
- (struct CGRect)finalFrameForNode:(ASDisplayNode *)arg1;
- (struct CGRect)initialFrameForNode:(ASDisplayNode *)arg1;
- (NSArray *)removedSubnodes;
- (NSArray *)insertedSubnodes;
- (NSArray *)subnodesForKey:(NSString *)arg1;
- (CDStruct_42a63532)constrainedSizeForKey:(NSString *)arg1;
- (ASLayout *)layoutForKey:(NSString *)arg1;
- (_Bool)isAnimated;
@end

@protocol ASDebugDescriptionProvider
- (NSMutableArray *)propertiesForDebugDescription;
@end

@protocol ASDebugNameProvider <NSObject>
@property(copy, nonatomic) NSString *debugName;
@end

@protocol ASDescriptionProvider
- (NSMutableArray *)propertiesForDescription;
@end

@protocol ASDisplayNodeViewProperties
@property(copy, nonatomic) NSString *accessibilityIdentifier;
@property(nonatomic) _Bool insetsLayoutMarginsFromSafeArea;
@property(nonatomic) _Bool preservesSuperviewLayoutMargins;
@property(nonatomic) struct UIEdgeInsets layoutMargins;
@property(nonatomic, getter=asyncdisplaykit_isAsyncTransactionContainer, setter=asyncdisplaykit_setAsyncTransactionContainer:) _Bool asyncdisplaykit_asyncTransactionContainer;
@property(nonatomic, getter=isExclusiveTouch) _Bool exclusiveTouch;
@property(nonatomic, getter=isUserInteractionEnabled) _Bool userInteractionEnabled;
@property(nonatomic) long long semanticContentAttribute;
@property(nonatomic) long long contentMode;
@property(nonatomic) struct CGRect frame;
@property(nonatomic) struct CGRect bounds;
@property(nonatomic) double alpha;
@property(retain, nonatomic) UIColor *tintColor;
@property(nonatomic) unsigned long long autoresizingMask;
@property(nonatomic) _Bool autoresizesSubviews;
@property(nonatomic, getter=isHidden) _Bool hidden;
@property(nonatomic) _Bool clipsToBounds;
@end

@protocol ASDisplayProperties <NSObject>
@property(nonatomic) unsigned int edgeAntialiasingMask;
@property(nonatomic) _Bool allowsEdgeAntialiasing;
@property(nonatomic) _Bool allowsGroupOpacity;
@property(nonatomic) struct CGColor *backgroundColor;
@property(nonatomic) struct CGColor *borderColor;
@property(nonatomic, getter=isOpaque) _Bool opaque;
@property(nonatomic) double borderWidth;
@property(nonatomic) double shadowRadius;
@property(nonatomic) struct CGSize shadowOffset;
@property(nonatomic) double shadowOpacity;
@property(nonatomic) struct CGColor *shadowColor;
@property(nonatomic) _Bool needsDisplayOnBoundsChange;
@property(nonatomic) struct CATransform3D sublayerTransform;
@property(nonatomic) struct CATransform3D transform;
@property(nonatomic) double rasterizationScale;
@property(nonatomic) double contentsScale;
@property(nonatomic) struct CGRect contentsCenter;
@property(nonatomic) struct CGRect contentsRect;
@property(copy, nonatomic) NSString *contentsGravity;
@property(retain, nonatomic) id contents;
@property(nonatomic) double cornerRadius;
@property(nonatomic) struct CGPoint anchorPoint;
@property(nonatomic) double zPosition;
@property(nonatomic) struct CGPoint position;
- (void)layoutIfNeeded;
- (void)setNeedsLayout;
- (void)setNeedsDisplay;
@end

@protocol ASImageContainerProtocol <NSObject>
- (NSData *)asdk_animatedImageData;
- (UIImage *)asdk_image;
@end

@protocol ASInterfaceStateDelegate <NSObject>
- (void)hierarchyDisplayDidFinish;
- (void)nodeDidLoad;
- (void)nodeDidLayout;
- (void)didExitPreloadState;
- (void)didEnterPreloadState;
- (void)didExitDisplayState;
- (void)didEnterDisplayState;
- (void)didExitVisibleState;
- (void)didEnterVisibleState;
- (void)interfaceStateDidChange:(unsigned long long)arg1 fromState:(unsigned long long)arg2;

@optional
- (void)nodeWillCalculateLayout:(CDStruct_42a63532)arg1;
@end

@protocol ASLayoutController <NSObject>
- (void)allElementsForScrolling:(long long)arg1 rangeMode:(long long)arg2 displaySet:(id *)arg3 preloadSet:(id *)arg4 map:(ASElementMap *)arg5;
- (NSHashTable *)elementsForScrolling:(long long)arg1 rangeMode:(long long)arg2 rangeType:(long long)arg3 map:(ASElementMap *)arg4;
- (CDStruct_c3b9c2ee)tuningParametersForRangeMode:(long long)arg1 rangeType:(long long)arg2;
- (void)setTuningParameters:(CDStruct_c3b9c2ee)arg1 forRangeMode:(long long)arg2 rangeType:(long long)arg3;
@end

@protocol ASLayoutElement <ASLayoutElementExtensibility, ASTraitEnvironment, ASLayoutElementAsciiArtProtocol>
@property(readonly, nonatomic) ASLayoutElementStyle *style;
@property(readonly, nonatomic) unsigned long long layoutElementType;
- (_Bool)implementsLayoutMethod;
- (ASLayout *)calculateLayoutThatFits:(CDStruct_42a63532)arg1 restrictedToSize:(CDStruct_99d2e400)arg2 relativeToParentSize:(struct CGSize)arg3;
- (ASLayout *)calculateLayoutThatFits:(CDStruct_42a63532)arg1;
- (ASLayout *)layoutThatFits:(CDStruct_42a63532)arg1 parentSize:(struct CGSize)arg2;
- (ASLayout *)layoutThatFits:(CDStruct_42a63532)arg1;
- (NSArray *)sublayoutElements;
@end

@protocol ASLayoutElementAsciiArtProtocol <NSObject>
- (NSString *)asciiArtName;
- (NSString *)asciiArtString;
@end

@protocol ASLayoutElementExtensibility <NSObject>
- (struct UIEdgeInsets)layoutOptionExtensionEdgeInsetsAtIndex:(int)arg1;
- (void)setLayoutOptionExtensionEdgeInsets:(struct UIEdgeInsets)arg1 atIndex:(int)arg2;
- (long long)layoutOptionExtensionIntegerAtIndex:(int)arg1;
- (void)setLayoutOptionExtensionInteger:(long long)arg1 atIndex:(int)arg2;
- (_Bool)layoutOptionExtensionBoolAtIndex:(int)arg1;
- (void)setLayoutOptionExtensionBool:(_Bool)arg1 atIndex:(int)arg2;
@end

@protocol ASLayoutElementStylability
- (id)styledWithBlock:(void (^)(ASLayoutElementStyle *))arg1;
@end

@protocol ASLayoutElementTransition <NSObject>
@property(readonly, nonatomic) _Bool canLayoutAsynchronous;
@end

@protocol ASLocking <NSLocking>
- (_Bool)tryLock;
@end

@protocol ASStackLayoutElement <NSObject>
@property(nonatomic) double descender;
@property(nonatomic) double ascender;
@property(nonatomic) unsigned long long alignSelf;
@property(nonatomic) CDStruct_7f320dbc flexBasis;
@property(nonatomic) double flexShrink;
@property(nonatomic) double flexGrow;
@property(nonatomic) double spacingAfter;
@property(nonatomic) double spacingBefore;
@end

@protocol ASTextKitTruncating <NSObject>
@property(readonly, nonatomic) struct _NSRange firstVisibleRange;
@property(readonly, nonatomic) vector_b5e32e34 visibleRanges;
- (void)truncate;
- (id)initWithContext:(ASTextKitContext *)arg1 truncationAttributedString:(NSAttributedString *)arg2 avoidTailTruncationSet:(NSCharacterSet *)arg3;
@end

@protocol ASTextLinePositionModifier <NSObject, NSCopying>
- (void)modifyLines:(NSArray *)arg1 fromText:(NSAttributedString *)arg2 inContainer:(ASTextContainer *)arg3;
@end

@protocol ASTraitEnvironment <NSObject>
- (ASTraitCollection *)asyncTraitCollection;
- (void)setPrimitiveTraitCollection:(CDStruct_104667ad)arg1;
- (CDStruct_104667ad)primitiveTraitCollection;
@end

@protocol CALayerDelegate <NSObject>

@optional
- (id <CAAction>)actionForLayer:(CALayer *)arg1 forKey:(NSString *)arg2;
- (void)layoutSublayersOfLayer:(CALayer *)arg1;
- (void)layerWillDraw:(CALayer *)arg1;
- (void)drawLayer:(CALayer *)arg1 inContext:(struct CGContext *)arg2;
- (void)displayLayer:(CALayer *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSLayoutManagerDelegate <NSObject>

@optional
- (void)layoutManager:(NSLayoutManager *)arg1 textContainer:(NSTextContainer *)arg2 didChangeGeometryFromSize:(struct CGSize)arg3;
- (void)layoutManager:(NSLayoutManager *)arg1 didCompleteLayoutForTextContainer:(NSTextContainer *)arg2 atEnd:(_Bool)arg3;
- (void)layoutManagerDidInvalidateLayout:(NSLayoutManager *)arg1;
- (_Bool)layoutManager:(NSLayoutManager *)arg1 shouldSetLineFragmentRect:(inout struct CGRect *)arg2 lineFragmentUsedRect:(inout struct CGRect *)arg3 baselineOffset:(inout double *)arg4 inTextContainer:(NSTextContainer *)arg5 forGlyphRange:(struct _NSRange)arg6;
- (struct CGRect)layoutManager:(NSLayoutManager *)arg1 boundingBoxForControlGlyphAtIndex:(unsigned long long)arg2 forTextContainer:(NSTextContainer *)arg3 proposedLineFragment:(struct CGRect)arg4 glyphPosition:(struct CGPoint)arg5 characterIndex:(unsigned long long)arg6;
- (_Bool)layoutManager:(NSLayoutManager *)arg1 shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(unsigned long long)arg2;
- (_Bool)layoutManager:(NSLayoutManager *)arg1 shouldBreakLineByWordBeforeCharacterAtIndex:(unsigned long long)arg2;
- (long long)layoutManager:(NSLayoutManager *)arg1 shouldUseAction:(long long)arg2 forControlCharacterAtIndex:(unsigned long long)arg3;
- (double)layoutManager:(NSLayoutManager *)arg1 paragraphSpacingAfterGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (double)layoutManager:(NSLayoutManager *)arg1 paragraphSpacingBeforeGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (double)layoutManager:(NSLayoutManager *)arg1 lineSpacingAfterGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (unsigned long long)layoutManager:(NSLayoutManager *)arg1 shouldGenerateGlyphs:(const unsigned short *)arg2 properties:(const long long *)arg3 characterIndexes:(const unsigned long long *)arg4 font:(UIFont *)arg5 forGlyphRange:(struct _NSRange)arg6;
@end

@protocol NSLocking
- (void)unlock;
- (void)lock;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceivePress:(UIPress *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidChangeAdjustedContentInset:(UIScrollView *)arg1;
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UITextInputTraits <NSObject>

@optional
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(copy, nonatomic) NSString *textContentType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(nonatomic) long long returnKeyType;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) long long smartInsertDeleteType;
@property(nonatomic) long long smartDashesType;
@property(nonatomic) long long smartQuotesType;
@property(nonatomic) long long spellCheckingType;
@property(nonatomic) long long autocorrectionType;
@property(nonatomic) long long autocapitalizationType;
@end

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3 interaction:(long long)arg4;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3 interaction:(long long)arg4;
- (void)textViewDidChangeSelection:(UITextView *)arg1;
- (void)textViewDidChange:(UITextView *)arg1;
- (_Bool)textView:(UITextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textViewDidEndEditing:(UITextView *)arg1;
- (void)textViewDidBeginEditing:(UITextView *)arg1;
- (_Bool)textViewShouldEndEditing:(UITextView *)arg1;
- (_Bool)textViewShouldBeginEditing:(UITextView *)arg1;
@end

@protocol _ASDisplayLayerDelegate <NSObject>

@optional
+ (UIImage *)displayWithParameters:(id <NSObject>)arg1 isCancelled:(_Bool (^)(void))arg2;
+ (void)drawRect:(struct CGRect)arg1 withParameters:(id)arg2 isCancelled:(_Bool (^)(void))arg3 isRasterizing:(_Bool)arg4;
- (void)cancelDisplayAsyncLayer:(_ASDisplayLayer *)arg1;
- (void)displayAsyncLayer:(_ASDisplayLayer *)arg1 asynchronously:(_Bool)arg2;
- (void)didDisplayAsyncLayer:(_ASDisplayLayer *)arg1;
- (void)willDisplayAsyncLayer:(_ASDisplayLayer *)arg1 asynchronously:(_Bool)arg2;
- (NSObject *)drawParametersForAsyncLayer:(_ASDisplayLayer *)arg1;
@end

@protocol _ASTransitionContextCompletionDelegate <NSObject>
- (void)transitionContext:(_ASTransitionContext *)arg1 didComplete:(_Bool)arg2;
@end

@protocol _ASTransitionContextLayoutDelegate <NSObject>
- (CDStruct_42a63532)transitionContext:(_ASTransitionContext *)arg1 constrainedSizeForKey:(NSString *)arg2;
- (ASLayout *)transitionContext:(_ASTransitionContext *)arg1 layoutForKey:(NSString *)arg2;
- (NSArray *)removedSubnodesWithTransitionContext:(_ASTransitionContext *)arg1;
- (NSArray *)insertedSubnodesWithTransitionContext:(_ASTransitionContext *)arg1;
- (NSArray *)currentSubnodesWithTransitionContext:(_ASTransitionContext *)arg1;
@end

@interface ASAbsoluteLayoutSpec : ASLayoutSpec
{
    long long _sizing;
}

+ (id)absoluteLayoutSpecWithSizing:(long long)arg1 children:(id)arg2;
+ (id)absoluteLayoutSpecWithChildren:(id)arg1;
@property(nonatomic) long long sizing; // @synthesize sizing=_sizing;
- (id)calculateLayoutThatFits:(CDStruct_42a63532)arg1;
- (id)initWithSizing:(long long)arg1 children:(id)arg2;
- (id)initWithChildren:(id)arg1;
- (id)init;

@end

@interface ASAbstractLayoutController : NSObject <ASLayoutController>
{
    vector_0253d28f _tuningParameters;
}

+ (vector_0253d28f)defaultTuningParameters;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)allElementsForScrolling:(long long)arg1 rangeMode:(long long)arg2 displaySet:(id *)arg3 preloadSet:(id *)arg4 map:(id)arg5;
- (id)elementsForScrolling:(long long)arg1 rangeMode:(long long)arg2 rangeType:(long long)arg3 map:(id)arg4;
- (void)setTuningParameters:(CDStruct_c3b9c2ee)arg1 forRangeMode:(long long)arg2 rangeType:(long long)arg3;
- (CDStruct_c3b9c2ee)tuningParametersForRangeMode:(long long)arg1 rangeType:(long long)arg2;
- (void)setTuningParameters:(CDStruct_c3b9c2ee)arg1 forRangeType:(long long)arg2;
- (CDStruct_c3b9c2ee)tuningParametersForRangeType:(long long)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ASAsciiArtBoxCreator : NSObject
{
}

+ (id)appendTopAndBottomToBoxString:(id)arg1 parent:(id)arg2;
+ (id)verticalBoxStringForChildren:(id)arg1 parent:(id)arg2;
+ (id)horizontalBoxStringForChildren:(id)arg1 parent:(id)arg2;

@end

@interface ASBackgroundLayoutSpec : ASLayoutSpec
{
}

+ (id)backgroundLayoutSpecWithChild:(id)arg1 background:(id)arg2;
@property(retain, nonatomic) id <ASLayoutElement> background;
- (id)child;
- (void)setChild:(id)arg1;
- (id)calculateLayoutThatFits:(CDStruct_42a63532)arg1 restrictedToSize:(CDStruct_99d2e400)arg2 relativeToParentSize:(struct CGSize)arg3;
- (id)initWithChild:(id)arg1 background:(id)arg2;

@end

@interface ASButtonNode : ASControlNode
{
    NSAttributedString *_normalAttributedTitle;
    NSAttributedString *_highlightedAttributedTitle;
    NSAttributedString *_selectedAttributedTitle;
    NSAttributedString *_selectedHighlightedAttributedTitle;
    NSAttributedString *_disabledAttributedTitle;
    UIImage *_normalImage;
    UIImage *_highlightedImage;
    UIImage *_selectedImage;
    UIImage *_selectedHighlightedImage;
    UIImage *_disabledImage;
    UIImage *_normalBackgroundImage;
    UIImage *_highlightedBackgroundImage;
    UIImage *_selectedBackgroundImage;
    UIImage *_selectedHighlightedBackgroundImage;
    UIImage *_disabledBackgroundImage;
    double _contentSpacing;
    _Bool _laysOutHorizontally;
    unsigned long long _contentVerticalAlignment;
    unsigned long long _contentHorizontalAlignment;
    struct UIEdgeInsets _contentEdgeInsets;
    long long _imageAlignment;
    ASTextNode *_titleNode;
    ASImageNode *_imageNode;
    ASImageNode *_backgroundImageNode;
}

- (void).cxx_destruct;
- (void)layout;
- (id)layoutSpecThatFits:(CDStruct_42a63532)arg1;
- (unsigned long long)defaultAccessibilityTraits;
- (id)defaultAccessibilityLabel;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2;
- (id)backgroundImageForState:(unsigned long long)arg1;
- (void)setImage:(id)arg1 forState:(unsigned long long)arg2;
- (id)imageForState:(unsigned long long)arg1;
- (void)setAttributedTitle:(id)arg1 forState:(unsigned long long)arg2;
- (id)attributedTitleForState:(unsigned long long)arg1;
- (void)setTitle:(id)arg1 withFont:(id)arg2 withColor:(id)arg3 forState:(unsigned long long)arg4;
@property long long imageAlignment; // @synthesize imageAlignment=_imageAlignment;
@property struct UIEdgeInsets contentEdgeInsets; // @synthesize contentEdgeInsets=_contentEdgeInsets;
@property unsigned long long contentHorizontalAlignment; // @synthesize contentHorizontalAlignment=_contentHorizontalAlignment;
@property unsigned long long contentVerticalAlignment; // @synthesize contentVerticalAlignment=_contentVerticalAlignment;
@property _Bool laysOutHorizontally; // @synthesize laysOutHorizontally=_laysOutHorizontally;
@property double contentSpacing; // @synthesize contentSpacing=_contentSpacing;
- (void)updateBackgroundImage;
- (void)updateTitle;
- (void)updateImage;
- (void)setDisplaysAsynchronously:(_Bool)arg1;
- (void)updateButtonContent;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)setLayerBacked:(_Bool)arg1;
@property(readonly) ASImageNode *backgroundImageNode; // @synthesize backgroundImageNode=_backgroundImageNode;
@property(readonly) ASImageNode *imageNode; // @synthesize imageNode=_imageNode;
@property(readonly) ASTextNode *titleNode; // @synthesize titleNode=_titleNode;
- (id)init;
- (void)updateYogaLayoutIfNeeded;

@end

@interface ASCGImageBuffer : NSObject
{
    _Bool _createdData;
    _Bool _isVM;
    unsigned long long _length;
    void *_mutableBytes;
}

+ (void)deallocateBuffer:(void *)arg1 length:(unsigned long long)arg2 isVM:(_Bool)arg3;
@property(readonly) void *mutableBytes; // @synthesize mutableBytes=_mutableBytes;
- (struct CGDataProvider *)createDataProviderAndInvalidate;
- (void)dealloc;
- (id)initWithLength:(unsigned long long)arg1;

@end

@interface ASCenterLayoutSpec : ASRelativeLayoutSpec
{
    unsigned long long _centeringOptions;
    unsigned long long _sizingOptions;
}

+ (id)centerLayoutSpecWithCenteringOptions:(unsigned long long)arg1 sizingOptions:(unsigned long long)arg2 child:(id)arg3;
@property(nonatomic) unsigned long long sizingOptions; // @synthesize sizingOptions=_sizingOptions;
@property(nonatomic) unsigned long long centeringOptions; // @synthesize centeringOptions=_centeringOptions;
- (unsigned long long)verticalPositionFromCenteringOptions:(unsigned long long)arg1;
- (unsigned long long)horizontalPositionFromCenteringOptions:(unsigned long long)arg1;
- (id)initWithCenteringOptions:(unsigned long long)arg1 sizingOptions:(unsigned long long)arg2 child:(id)arg3;

@end

@interface ASConfiguration : NSObject <NSCopying>
{
    id <ASConfigurationDelegate> _delegate;
    unsigned long long _experimentalFeatures;
}

@property(nonatomic) unsigned long long experimentalFeatures; // @synthesize experimentalFeatures=_experimentalFeatures;
@property(retain, nonatomic) id <ASConfigurationDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface ASConfigurationManager : NSObject
{
    ASConfiguration *_config;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    _Bool _frameworkInitialized;
    // Error parsing type: AQ, name: _activatedExperiments
}

+ (void)test_resetWithConfiguration:(id)arg1;
+ (id)defaultConfiguration;
- (void).cxx_destruct;
- (_Bool)activateExperimentalFeature:(unsigned long long)arg1;
- (void)frameworkDidInitialize;
- (id)init;

@end

@interface ASControlNode : ASDisplayNode
{
    _Bool _enabled;
    _Bool _highlighted;
    _Bool _tracking;
    _Bool _touchInside;
    NSMutableDictionary *_controlEventDispatchTable;
    ASImageNode *_debugHighlightOverlay;
    _Bool _selected;
}

+ (_Bool)enableHitTestDebug;
+ (void)setEnableHitTestDebug:(_Bool)arg1;
@property(getter=isTouchInside) _Bool touchInside; // @synthesize touchInside=_touchInside;
@property(getter=isTracking) _Bool tracking; // @synthesize tracking=_tracking;
@property(getter=isSelected) _Bool selected; // @synthesize selected=_selected;
@property(getter=isHighlighted) _Bool highlighted; // @synthesize highlighted=_highlighted;
@property(getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
- (id)debugHighlightOverlay;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)cancelTrackingWithEvent:(id)arg1;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)sendActionsForControlEvents:(unsigned long long)arg1 withEvent:(id)arg2;
- (void)removeTarget:(id)arg1 action:(SEL)arg2 forControlEvents:(unsigned long long)arg3;
- (id)allTargets;
- (id)actionsForTarget:(id)arg1 forControlEvent:(unsigned long long)arg2;
- (void)addTarget:(id)arg1 action:(SEL)arg2 forControlEvents:(unsigned long long)arg3;
- (_Bool)supportsLayerBacking;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_cancelTrackingWithEvent:(id)arg1;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)__exitHierarchy;
- (void)setUserInteractionEnabled:(_Bool)arg1;
- (id)init;
- (void)drawEdgeIfClippedWithEdges:(unsigned long long)arg1 color:(id)arg2 borderWidth:(double)arg3 imgRect:(struct CGRect)arg4;
- (unsigned long long)setEdgesOfIntersectionForChildRect:(struct CGRect)arg1 parentRect:(struct CGRect)arg2 rectEdge:(unsigned long long)arg3;
- (void)layout;

@end

@interface ASControlTargetAction : NSObject
{
    id _target;
    _Bool _createdWithNoTarget;
    SEL _action;
}

@property(readonly, nonatomic) _Bool createdWithNoTarget; // @synthesize createdWithNoTarget=_createdWithNoTarget;
@property(nonatomic) SEL action; // @synthesize action=_action;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(nonatomic) __weak id target;

@end

@interface ASCornerLayoutSpec : ASLayoutSpec
{
    _Bool _wrapsCorner;
    long long _cornerLocation;
    struct CGPoint _offset;
}

+ (id)cornerLayoutSpecWithChild:(id)arg1 corner:(id)arg2 location:(long long)arg3;
@property(nonatomic) _Bool wrapsCorner; // @synthesize wrapsCorner=_wrapsCorner;
@property(nonatomic) struct CGPoint offset; // @synthesize offset=_offset;
@property(nonatomic) long long cornerLocation; // @synthesize cornerLocation=_cornerLocation;
- (void)_validateElement:(id)arg1;
- (id)calculateLayoutThatFits:(CDStruct_42a63532)arg1;
@property(retain, nonatomic) id <ASLayoutElement> corner;
- (id)child;
- (void)setChild:(id)arg1;
- (id)initWithChild:(id)arg1 corner:(id)arg2 location:(long long)arg3;

@end

@interface ASDefaultPlayButton : ASButtonNode
{
}

+ (void)drawRect:(struct CGRect)arg1 withParameters:(id)arg2 isCancelled:(CDUnknownBlockType)arg3 isRasterizing:(_Bool)arg4;
- (id)init;

@end

@interface ASDefaultPlaybackButton : ASControlNode
{
    long long _buttonType;
}

+ (void)drawRect:(struct CGRect)arg1 withParameters:(id)arg2 isCancelled:(CDUnknownBlockType)arg3 isRasterizing:(_Bool)arg4;
@property(nonatomic) long long buttonType; // @synthesize buttonType=_buttonType;
- (id)drawParametersForAsyncLayer:(id)arg1;
- (id)init;

@end

@interface ASDisplayNode : NSObject <ASDebugNameProvider, ASLayoutElement, ASLayoutElementStylability, ASAsyncTransactionContainer, UIGestureRecognizerDelegate, CALayerDelegate, _ASDisplayLayerDelegate, ASCATransactionQueueObserving, ASDescriptionProvider, ASDebugDescriptionProvider, _ASTransitionContextCompletionDelegate, ASLayoutElementTransition, ASLocking>
{
    void *_displayNodeContext;
    unsigned long long _interfaceState;
    unsigned long long _hierarchyState;
    // Error parsing type: {RecursiveMutex="_type"i""(?="_unfair"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_runfair"{?="_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_thread"A^{_opaque_pthread_t}"_count"i}"_plain"{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}"_recursive"{recursive_mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}})"_owner"{__thread_id="__id_"^{_opaque_pthread_t}}"_count"i}, name: __instanceLock__
    _ASPendingState *_pendingViewState;
    unsigned long long _pendingInterfaceState;
    unsigned long long _preExitingInterfaceState;
    UIView *_view;
    CALayer *_layer;
    // Error parsing type: {atomic<unsigned int>="__a_"AI}, name: _atomicFlags
    struct ASDisplayNodeFlags _flags;
    ASDisplayNode *_supernode;
    NSMutableArray *_subnodes;
    ASNodeController *_strongNodeController;
    ASNodeController *_weakNodeController;
    NSArray *_cachedSubnodes;
    // Error parsing type: {atomic<unsigned int>="__a_"AI}, name: _displaySentinel
    double _contentsScaleForDisplay;
    unsigned long long _methodOverrides;
    struct UIEdgeInsets _hitTestSlop;
    ASLayoutElementStyle *_style;
    // Error parsing type: {atomic<ASPrimitiveTraitCollection>="__a_"A{?}}, name: _primitiveTraitCollection
    CDUnknownBlockType _layoutSpecBlock;
    NSString *_debugName;
    _Bool _automaticallyManagesSubnodes;
    _ASTransitionContext *_pendingLayoutTransitionContext;
    double _defaultLayoutTransitionDuration;
    double _defaultLayoutTransitionDelay;
    unsigned long long _defaultLayoutTransitionOptions;
    // Error parsing type: {atomic<int>="__a_"Ai}, name: _transitionID
    // Error parsing type: {atomic<int>="__a_"Ai}, name: _pendingTransitionID
    ASLayoutTransition *_pendingLayoutTransition;
    struct ASDisplayNodeLayout _calculatedDisplayNodeLayout;
    struct ASDisplayNodeLayout _pendingDisplayNodeLayout;
    // Error parsing type: {atomic<unsigned long>="__a_"AQ}, name: _layoutVersion
    unsigned long long _measurementOptions;
    double _layoutSpecTotalTime;
    long long _layoutSpecNumberOfPasses;
    double _layoutComputationTotalTime;
    long long _layoutComputationNumberOfPasses;
    CDUnknownBlockType _viewBlock;
    CDUnknownBlockType _layerBlock;
    NSMutableArray *_onDidLoadBlocks;
    Class _viewClass;
    Class _layerClass;
    UIImage *_placeholderImage;
    _Bool _placeholderEnabled;
    CALayer *_placeholderLayer;
    ASWeakSet *_pendingDisplayNodes;
    double _cornerRadius;
    long long _cornerRoundingType;
    CALayer *_clipCornerLayers[4];
    CDUnknownBlockType _willDisplayNodeContentWithRenderingContext;
    CDUnknownBlockType _didDisplayNodeContentWithRenderingContext;
    _Bool _isAccessibilityElement;
    NSString *_accessibilityLabel;
    NSAttributedString *_accessibilityAttributedLabel;
    NSString *_accessibilityHint;
    NSAttributedString *_accessibilityAttributedHint;
    NSString *_accessibilityValue;
    NSAttributedString *_accessibilityAttributedValue;
    unsigned long long _accessibilityTraits;
    struct CGRect _accessibilityFrame;
    NSString *_accessibilityLanguage;
    _Bool _accessibilityElementsHidden;
    _Bool _accessibilityViewIsModal;
    _Bool _shouldGroupAccessibilityChildren;
    NSString *_accessibilityIdentifier;
    long long _accessibilityNavigationStyle;
    NSArray *_accessibilityHeaderElements;
    struct CGPoint _accessibilityActivationPoint;
    UIBezierPath *_accessibilityPath;
    _Bool _isAccessibilityContainer;
    struct UIEdgeInsets _fallbackSafeAreaInsets;
    _Bool _fallbackInsetsLayoutMarginsFromSafeArea;
    _Bool _automaticallyRelayoutOnSafeAreaChanges;
    _Bool _automaticallyRelayoutOnLayoutMarginsChanges;
    _Bool _isViewControllerRoot;
    ASLayout *_unflattenedLayout;
    _Bool _hasHadInterfaceStateDelegates;
    id <ASInterfaceStateDelegate> _interfaceStateDelegates[4];
    _Bool _interfaceStateSuspended;
    double _placeholderFadeDuration;
    long long _drawingPriority;
    struct CGRect _threadSafeBounds;
}

+ (CDUnknownBlockType)nonFatalErrorBlock;
+ (void)setNonFatalErrorBlock:(CDUnknownBlockType)arg1;
+ (void)scheduleNodeForRecursiveDisplay:(id)arg1;
+ (Class)layerClass;
+ (Class)viewClass;
+ (void)load;
+ (void)initialize;
+ (_Bool)suppressesInvalidCollectionUpdateExceptions;
+ (void)setSuppressesInvalidCollectionUpdateExceptions:(_Bool)arg1;
+ (_Bool)shouldStoreUnflattenedLayouts;
+ (void)setShouldStoreUnflattenedLayouts:(_Bool)arg1;
+ (CDUnknownBlockType)tipDisplayBlock;
+ (void)setTipDisplayBlock:(CDUnknownBlockType)arg1;
+ (_Bool)enableTips;
+ (void)setEnableTips:(_Bool)arg1;
@property(nonatomic) _Bool interfaceStateSuspended; // @synthesize interfaceStateSuspended=_interfaceStateSuspended;
@property long long drawingPriority; // @synthesize drawingPriority=_drawingPriority;
@property double placeholderFadeDuration; // @synthesize placeholderFadeDuration=_placeholderFadeDuration;
@property _Bool placeholderEnabled; // @synthesize placeholderEnabled=_placeholderEnabled;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct CGRect)_frameInWindow;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (id)propertiesForDebugDescription;
- (id)propertiesForDescription;
- (unsigned long long)defaultAccessibilityTraits;
- (id)defaultAccessibilityIdentifier;
- (id)defaultAccessibilityValue;
- (id)defaultAccessibilityHint;
- (id)defaultAccessibilityLabel;
- (_Bool)isAccessibilityContainer;
- (void)setIsAccessibilityContainer:(_Bool)arg1;
- (CDStruct_264a827c)performanceMeasurements;
- (unsigned long long)measurementOptions;
- (void)setMeasurementOptions:(unsigned long long)arg1;
- (id)_supernodeWithClass:(Class)arg1 checkViewHierarchy:(_Bool)arg2;
- (void)_locked_applyPendingViewState;
- (void)applyPendingViewState;
- (void)_locked_applyPendingStateToViewOrLayer;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
@property struct UIEdgeInsets hitTestSlop;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)enumerateInterfaceStateDelegates:(CDUnknownBlockType)arg1;
- (void)recursivelyClearContents;
- (void)clearContents;
- (void)_didExitPreloadState;
- (void)_didEnterPreloadState;
- (void)recursivelyClearPreloadedData;
- (void)recursivelyPreload;
- (void)setNeedsPreload;
@property(readonly, getter=isInPreloadState) _Bool inPreloadState;
- (void)_didExitDisplayState;
- (void)_didEnterDisplayState;
@property(readonly, getter=isInDisplayState) _Bool inDisplayState;
- (void)_didExitVisibleState;
- (void)_didEnterVisibleState;
@property(readonly, getter=isVisible) _Bool visible;
- (void)removeInterfaceStateDelegate:(id)arg1;
- (void)addInterfaceStateDelegate:(id)arg1;
- (_Bool)shouldScheduleDisplayWithNewInterfaceState:(unsigned long long)arg1;
- (void)_interfaceStateDidChange:(unsigned long long)arg1 fromState:(unsigned long long)arg2;
- (void)prepareForCATransactionCommit;
- (void)applyPendingInterfaceState:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long pendingInterfaceState;
- (void)setInterfaceState:(unsigned long long)arg1;
@property(readonly) unsigned long long interfaceState;
- (void)recursivelySetInterfaceState:(unsigned long long)arg1;
- (void)exitInterfaceState:(unsigned long long)arg1;
- (void)enterInterfaceState:(unsigned long long)arg1;
- (_Bool)supportsRangeManagedInterfaceState;
- (void)didExitHierarchy;
- (void)didEnterHierarchy;
- (void)willEnterHierarchy;
@property(nonatomic) unsigned long long hierarchyState;
- (void)exitHierarchyState:(unsigned long long)arg1;
- (void)enterHierarchyState:(unsigned long long)arg1;
- (void)__exitHierarchy;
- (void)__enterHierarchy;
@property(readonly, getter=isInHierarchy) _Bool inHierarchy;
- (_Bool)placeholderShouldPersist;
- (id)placeholderImage;
- (void)_locked_setupPlaceholderLayerIfNeeded;
- (_Bool)_locked_shouldHavePlaceholderLayer;
- (void)_locked_layoutPlaceholderIfNecessary;
- (void)__decrementVisibilityNotificationsDisabled;
- (void)__incrementVisibilityNotificationsDisabled;
- (_Bool)__selfOrParentHasVisibilityNotificationsDisabled;
- (_Bool)__visibilityNotificationsDisabled;
- (void)_removeFromSupernode:(id)arg1 view:(id)arg2 layer:(id)arg3;
- (void)_removeFromSupernodeIfEqualTo:(id)arg1;
- (void)_removeFromSupernode;
- (void)removeFromSupernode;
- (void)_removeSubnode:(id)arg1;
- (void)_insertSubnode:(id)arg1 atIndex:(long long)arg2;
- (void)insertSubnode:(id)arg1 atIndex:(long long)arg2;
- (void)_insertSubnode:(id)arg1 aboveSubnode:(id)arg2;
- (void)insertSubnode:(id)arg1 aboveSubnode:(id)arg2;
- (void)_insertSubnode:(id)arg1 belowSubnode:(id)arg2;
- (void)insertSubnode:(id)arg1 belowSubnode:(id)arg2;
- (void)_replaceSubnode:(id)arg1 withSubnode:(id)arg2;
- (void)replaceSubnode:(id)arg1 withSubnode:(id)arg2;
- (void)_addSubnodeSubviewOrSublayer:(id)arg1;
- (void)_addSubnodeViewsAndLayers;
- (void)_addSubnode:(id)arg1;
- (void)addSubnode:(id)arg1;
- (void)_insertSubnodeSubviewOrSublayer:(id)arg1 atIndex:(long long)arg2;
- (void)_insertSubnode:(id)arg1 atSubnodeIndex:(long long)arg2 sublayerIndex:(long long)arg3 andRemoveSubnode:(id)arg4;
@property(readonly, copy) NSArray *subnodes;
- (void)_setSupernode:(id)arg1;
@property(readonly) __weak ASDisplayNode *supernode;
- (struct CGRect)convertRect:(struct CGRect)arg1 toNode:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromNode:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toNode:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromNode:(id)arg2;
- (struct CATransform3D)_transformToAncestor:(id)arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)subnodeDisplayDidFinish:(id)arg1;
- (void)subnodeDisplayWillStart:(id)arg1;
- (void)displayDidFinish;
- (void)displayWillStartAsynchronously:(_Bool)arg1;
- (void)displayWillStart;
- (void)didDisplayAsyncLayer:(id)arg1;
- (void)willDisplayAsyncLayer:(id)arg1 asynchronously:(_Bool)arg2;
@property _Bool displaySuspended;
- (void)recursivelySetDisplaySuspended:(_Bool)arg1;
- (void)updateCornerRoundingWithType:(long long)arg1 cornerRadius:(double)arg2;
- (void)_setClipCornerLayersVisible:(_Bool)arg1;
- (void)_updateClipCornerLayerContentsWithRadius:(double)arg1 backgroundColor:(id)arg2;
- (void)_layoutClipCornersIfNeeded;
- (void)recursivelySetNeedsDisplayAtScale:(double)arg1;
- (void)setNeedsDisplayAtScale:(double)arg1;
@property _Bool shouldBypassEnsureDisplay;
- (void)recursivelyEnsureDisplaySynchronously:(_Bool)arg1;
- (void)_recursivelyTriggerDisplayAndBlock:(_Bool)arg1;
- (_Bool)_canCallSetNeedsDisplayOfLayer;
- (void)_pendingNodeDidDisplay:(id)arg1;
- (void)_pendingNodeWillDisplay:(id)arg1;
- (_Bool)_implementsDisplay;
- (void)__setNeedsDisplay;
- (void)recursivelyDisplayImmediately;
- (void)displayImmediately;
@property(nonatomic) double contentsScaleForDisplay;
- (void)enableSubtreeRasterization;
@property(readonly) _Bool rasterizesSubtree;
@property _Bool displaysAsynchronously;
- (_Bool)_locked_displaysAsynchronously;
- (void)transitionContext:(id)arg1 didComplete:(_Bool)arg2;
- (void)_layoutTransitionMeasurementDidFinish;
- (void)layout;
- (struct CGSize)calculateSizeThatFits:(struct CGSize)arg1;
- (id)calculateLayoutThatFits:(CDStruct_42a63532)arg1;
- (id)calculateLayoutThatFits:(CDStruct_42a63532)arg1 restrictedToSize:(CDStruct_99d2e400)arg2 relativeToParentSize:(struct CGSize)arg3;
- (void)_layoutDidFinish;
- (void)__layout;
- (void)invalidateCalculatedLayout;
- (void)__setNeedsLayout;
@property(readonly, nonatomic) _Bool canLayoutAsynchronous;
@property(copy, nonatomic) NSString *debugName;
- (_Bool)__isFirstResponder;
- (_Bool)__resignFirstResponder;
- (_Bool)__canResignFirstResponder;
- (_Bool)__becomeFirstResponder;
- (_Bool)__canBecomeFirstResponder;
- (void)checkResponderCompatibility;
- (void)__setNodeController:(id)arg1;
@property _Bool automaticallyRelayoutOnLayoutMarginsChanges;
@property _Bool automaticallyRelayoutOnSafeAreaChanges;
@property(nonatomic, getter=isViewControllerRoot) _Bool viewControllerRoot;
- (void)_fallbackUpdateSafeAreaOnChildren;
@property(nonatomic) struct UIEdgeInsets fallbackSafeAreaInsets;
- (void)nodeViewDidAddGestureRecognizer;
@property(nonatomic) struct CGRect threadSafeBounds; // @synthesize threadSafeBounds=_threadSafeBounds;
- (struct CGRect)_locked_threadSafeBounds;
@property _Bool shouldAnimateSizeChanges;
@property(readonly) _Bool supportsLayerBacking;
@property(getter=isLayerBacked) _Bool layerBacked;
@property(readonly, getter=isSynchronous) _Bool synchronous;
- (id)_locked_asyncLayer;
@property(readonly, nonatomic) _ASDisplayLayer *asyncLayer;
@property(readonly) CALayer *layer;
@property(readonly) UIView *view;
- (_Bool)_locked_isNodeLoaded;
@property(readonly, getter=isNodeLoaded) _Bool nodeLoaded;
- (void)_didLoad;
- (void)_locked_loadViewOrLayer;
- (id)_locked_layerToLoad;
- (id)_locked_viewToLoad;
- (_Bool)_locked_shouldLoadViewOrLayer;
- (void)dealloc;
- (void)onDidLoad:(CDUnknownBlockType)arg1;
- (unsigned long long)methodOverrides;
- (void)setLayerBlock:(CDUnknownBlockType)arg1;
- (void)setViewBlock:(CDUnknownBlockType)arg1;
- (_Bool)tryLock;
- (void)unlock;
- (void)lock;
- (id)initWithLayerBlock:(CDUnknownBlockType)arg1 didLoadBlock:(CDUnknownBlockType)arg2;
- (id)initWithLayerBlock:(CDUnknownBlockType)arg1;
- (id)initWithViewBlock:(CDUnknownBlockType)arg1 didLoadBlock:(CDUnknownBlockType)arg2;
- (id)initWithViewBlock:(CDUnknownBlockType)arg1;
- (id)initWithLayerClass:(Class)arg1;
- (id)initWithViewClass:(Class)arg1;
- (id)init;
- (void)_initializeInstance;
- (void)_staticInitialize;
@property(readonly, copy) NSString *detailedLayoutDescription;
- (id)_recursiveDescriptionHelperWithIndent:(id)arg1;
- (id)displayNodeRecursiveDescription;
@property(readonly) ASLayout *unflattenedCalculatedLayout;
@property(readonly, copy) NSString *ancestryDescription;
- (id)supernodeOfClass:(Class)arg1 includingSelf:(_Bool)arg2;
@property(readonly) id <NSFastEnumeration> supernodesIncludingSelf;
@property(readonly) id <NSFastEnumeration> supernodes;
- (void)setDidDisplayNodeContentWithRenderingContext:(CDUnknownBlockType)arg1;
- (void)setWillDisplayNodeContentWithRenderingContext:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)didDisplayNodeContentWithRenderingContext;
- (CDUnknownBlockType)willDisplayNodeContentWithRenderingContext;
- (void)cancelDisplayAsyncLayer:(id)arg1;
- (void)displayAsyncLayer:(id)arg1 asynchronously:(_Bool)arg2;
- (void)__didDisplayNodeContentWithRenderingContext:(struct CGContext *)arg1 image:(id *)arg2 drawParameters:(id)arg3 backgroundColor:(id)arg4 borderWidth:(double)arg5 borderColor:(struct CGColor *)arg6;
- (void)__willDisplayNodeContentWithRenderingContext:(struct CGContext *)arg1 drawParameters:(id)arg2;
- (CDUnknownBlockType)_displayBlockWithAsynchronous:(_Bool)arg1 isCancelledBlock:(CDUnknownBlockType)arg2 rasterizing:(_Bool)arg3;
- (void)_recursivelyRasterizeSelfAndSublayersWithIsCancelledBlock:(CDUnknownBlockType)arg1 displayBlocks:(id)arg2;
- (id)drawParameters;
@property(readonly, nonatomic) UIViewController *closestViewController;
- (double)debugAllCreationTime;
@property(readonly, nonatomic) double debugTimeForDidLoad;
@property(readonly, nonatomic) double debugTimeToAddSubnodeViews;
@property(readonly, nonatomic) double debugTimeToApplyPendingState;
@property(readonly, nonatomic) double debugTimeToCreateView;
- (id)asciiArtName;
- (id)asciiArtString;
- (id)asyncTraitCollection;
- (void)setPrimitiveTraitCollection:(CDStruct_104667ad)arg1;
- (CDStruct_104667ad)primitiveTraitCollection;
- (struct UIEdgeInsets)layoutOptionExtensionEdgeInsetsAtIndex:(int)arg1;
- (void)setLayoutOptionExtensionEdgeInsets:(struct UIEdgeInsets)arg1 atIndex:(int)arg2;
- (long long)layoutOptionExtensionIntegerAtIndex:(int)arg1;
- (void)setLayoutOptionExtensionInteger:(long long)arg1 atIndex:(int)arg2;
- (_Bool)layoutOptionExtensionBoolAtIndex:(int)arg1;
- (void)setLayoutOptionExtensionBool:(_Bool)arg1 atIndex:(int)arg2;
- (id)layoutThatFits:(CDStruct_42a63532)arg1 parentSize:(struct CGSize)arg2;
- (struct CGSize)measure:(struct CGSize)arg1;
- (id)layoutThatFits:(CDStruct_42a63532)arg1;
- (id)sublayoutElements;
@property(readonly, nonatomic) unsigned long long layoutElementType;
- (id)_locked_style;
@property(readonly, nonatomic) ASLayoutElementStyle *style;
- (_Bool)implementsLayoutMethod;
- (CDStruct_42a63532)_locked_constrainedSizeForCalculatedLayout;
@property(readonly) CDStruct_42a63532 constrainedSizeForCalculatedLayout;
@property(readonly) struct CGSize calculatedSize;
- (id)calculatedLayout;
@property(readonly) long long layoutEngineType;
- (id)styledWithBlock:(CDUnknownBlockType)arg1;
- (void)_layoutSublayouts;
- (CDStruct_42a63532)_locked_constrainedSizeForLayoutPass;
- (CDStruct_42a63532)_constrainedSizeForLayoutPass;
- (void)_u_measureNodeWithBoundsIfNecessary:(struct CGRect)arg1;
- (void)displayNodeDidInvalidateSizeNewSize:(struct CGSize)arg1;
- (void)_rootNodeDidInvalidateSize;
- (void)_u_setNeedsLayoutFromAbove;
@property _Bool automaticallyManagesSubnodes;
- (void)_locked_setCalculatedDisplayNodeLayout:(const struct ASDisplayNodeLayout *)arg1;
- (void)_setCalculatedDisplayNodeLayout:(const struct ASDisplayNodeLayout *)arg1;
- (void)_pendingLayoutTransitionDidComplete;
- (void)_assertSubnodeState;
- (void)_completeLayoutTransition:(id)arg1;
- (void)_completePendingLayoutTransition;
- (void)didCompleteLayoutTransition:(id)arg1;
- (void)animateLayoutTransition:(id)arg1;
- (unsigned long long)defaultLayoutTransitionOptions;
- (void)setDefaultLayoutTransitionOptions:(unsigned long long)arg1;
- (double)defaultLayoutTransitionDelay;
- (void)setDefaultLayoutTransitionDelay:(double)arg1;
- (double)defaultLayoutTransitionDuration;
- (void)setDefaultLayoutTransitionDuration:(double)arg1;
- (void)cancelLayoutTransition;
- (void)transitionLayoutWithSizeRange:(CDStruct_42a63532)arg1 animated:(_Bool)arg2 shouldMeasureAsync:(_Bool)arg3 measurementCompletion:(CDUnknownBlockType)arg4;
- (void)transitionLayoutWithAnimation:(_Bool)arg1 shouldMeasureAsync:(_Bool)arg2 measurementCompletion:(CDUnknownBlockType)arg3;
- (_Bool)_finishOrCancelTransition;
- (int)_startNewTransition;
- (_Bool)_locked_isLayoutTransitionInvalid;
- (_Bool)_isLayoutTransitionInvalid;
- (_Bool)locked_shouldLayoutFromYogaRoot;
- (id)layoutSpecThatFits:(CDStruct_42a63532)arg1;
- (id)_locked_layoutElementThatFits:(CDStruct_42a63532)arg1;
- (id)calculateLayoutLayoutSpec:(CDStruct_42a63532)arg1;
@property(copy) CDUnknownBlockType layoutSpecBlock;
- (void)safeAreaInsetsDidChange;
@property _Bool insetsLayoutMarginsFromSafeArea;
@property(readonly) struct UIEdgeInsets safeAreaInsets;
- (void)layoutMarginsDidChange;
@property _Bool preservesSuperviewLayoutMargins;
@property struct UIEdgeInsets layoutMargins;
@property long long semanticContentAttribute;
@property unsigned int edgeAntialiasingMask;
@property _Bool allowsEdgeAntialiasing;
@property _Bool allowsGroupOpacity;
@property struct CGColor *borderColor;
@property double borderWidth;
@property double shadowRadius;
@property struct CGSize shadowOffset;
@property double shadowOpacity;
@property struct CGColor *shadowColor;
- (void)tintColorDidChange;
@property(copy) UIColor *tintColor;
@property(copy) UIColor *backgroundColor;
- (void)setAccessibilityCustomActions:(id)arg1;
@property long long contentMode;
@property unsigned long long autoresizingMask;
@property _Bool autoresizesSubviews;
@property _Bool needsDisplayOnBoundsChange;
@property(getter=isHidden) _Bool hidden;
@property(retain) id contents;
@property struct CATransform3D subnodeTransform;
@property struct CATransform3D transform;
@property double zPosition;
@property struct CGPoint position;
@property struct CGPoint anchorPoint;
@property _Bool clipsToBounds;
@property(getter=isExclusiveTouch) _Bool exclusiveTouch;
@property(getter=isUserInteractionEnabled) _Bool userInteractionEnabled;
@property(getter=isOpaque) _Bool opaque;
- (void)layoutIfNeeded;
- (void)setNeedsLayout;
- (void)setNeedsDisplay;
@property struct CGRect frame;
@property struct CGRect bounds;
@property double rasterizationScale;
@property double contentsScale;
@property struct CGRect contentsCenter;
@property struct CGRect contentsRect;
@property(copy) NSString *contentsGravity;
@property long long cornerRoundingType;
@property double cornerRadius;
@property double alpha;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)isFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (_Bool)_locked_insetsLayoutMarginsFromSafeArea;
@property(nonatomic) double layerCornerRadius;
- (long long)accessibilityElementCount;
@property(copy) UIBezierPath *accessibilityPath;
@property struct CGPoint accessibilityActivationPoint;
@property long long accessibilityNavigationStyle;
@property(copy) NSString *accessibilityIdentifier;
@property _Bool shouldGroupAccessibilityChildren;
@property _Bool accessibilityViewIsModal;
@property _Bool accessibilityElementsHidden;
@property(copy) NSString *accessibilityLanguage;
@property struct CGRect accessibilityFrame;
@property unsigned long long accessibilityTraits;
@property(copy) NSAttributedString *accessibilityAttributedValue;
@property(copy) NSString *accessibilityValue;
@property(copy) NSAttributedString *accessibilityAttributedHint;
@property(copy) NSString *accessibilityHint;
@property(copy) NSAttributedString *accessibilityAttributedLabel;
@property(copy) NSString *accessibilityLabel;
@property _Bool isAccessibilityElement;
@property(retain, nonatomic, setter=asyncdisplaykit_setCurrentAsyncTransaction:) _ASAsyncTransaction *asyncdisplaykit_currentAsyncTransaction;
- (void)asyncdisplaykit_cancelAsyncTransactions;
@property(readonly, nonatomic) unsigned long long asyncdisplaykit_asyncTransactionContainerState;
@property(nonatomic, getter=asyncdisplaykit_isAsyncTransactionContainer, setter=asyncdisplaykit_setAsyncTransactionContainer:) _Bool asyncdisplaykit_asyncTransactionContainer;
@property(readonly, nonatomic) ASNodeController *nodeController;
- (id)accessibilityElements;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ASDisplayNodeCornerLayerDelegate : NSObject <CALayerDelegate>
{
}

- (id)actionForLayer:(id)arg1 forKey:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ASDisplayNodeTipState : NSObject
{
    ASDisplayNode *_node;
    ASTipNode *_tipNode;
}

@property(retain, nonatomic) ASTipNode *tipNode; // @synthesize tipNode=_tipNode;
@property(readonly, nonatomic) ASDisplayNode *node; // @synthesize node=_node;
- (void).cxx_destruct;
- (id)initWithNode:(id)arg1;

@end

@interface ASNodeAncestryEnumerator : NSEnumerator
{
    ASDisplayNode *_lastNode;
    _Bool _initialState;
}

- (void).cxx_destruct;
- (id)nextObject;
- (id)initWithNode:(id)arg1;

@end

@interface ASEditableTextNodeTargetForAction : NSObject
{
    id _target;
}

@property(readonly, nonatomic) id target; // @synthesize target=_target;
- (void).cxx_destruct;
- (id)initWithTarget:(id)arg1;

@end

@interface _ASTextInputTraitsPendingState : NSObject
{
    _Bool _enablesReturnKeyAutomatically;
    _Bool _secureTextEntry;
    long long _autocapitalizationType;
    long long _autocorrectionType;
    long long _spellCheckingType;
    long long _keyboardAppearance;
    long long _keyboardType;
    long long _returnKeyType;
}

@property(getter=isSecureTextEntry) _Bool secureTextEntry; // @synthesize secureTextEntry=_secureTextEntry;
@property _Bool enablesReturnKeyAutomatically; // @synthesize enablesReturnKeyAutomatically=_enablesReturnKeyAutomatically;
@property long long returnKeyType; // @synthesize returnKeyType=_returnKeyType;
@property long long keyboardType; // @synthesize keyboardType=_keyboardType;
@property long long keyboardAppearance; // @synthesize keyboardAppearance=_keyboardAppearance;
@property long long spellCheckingType; // @synthesize spellCheckingType=_spellCheckingType;
@property long long autocorrectionType; // @synthesize autocorrectionType=_autocorrectionType;
@property long long autocapitalizationType; // @synthesize autocapitalizationType=_autocapitalizationType;
- (id)init;

@end

@interface ASPanningOverriddenUITextView : ASTextKitComponentsTextView
{
    _Bool _shouldBlockPanGesture;
    _Bool _initializedPrimaryInputLanguage;
    CDUnknownBlockType _shouldCopy;
    CDUnknownBlockType _shouldPaste;
    CDUnknownBlockType _targetForActionImpl;
    CDUnknownBlockType _shouldReturn;
    CDUnknownBlockType _backspaceWhileEmpty;
    NSString *_initialPrimaryLanguage;
}

@property(nonatomic) _Bool initializedPrimaryInputLanguage; // @synthesize initializedPrimaryInputLanguage=_initializedPrimaryInputLanguage;
@property(retain, nonatomic) NSString *initialPrimaryLanguage; // @synthesize initialPrimaryLanguage=_initialPrimaryLanguage;
@property(copy, nonatomic) CDUnknownBlockType backspaceWhileEmpty; // @synthesize backspaceWhileEmpty=_backspaceWhileEmpty;
@property(copy, nonatomic) CDUnknownBlockType shouldReturn; // @synthesize shouldReturn=_shouldReturn;
@property(copy, nonatomic) CDUnknownBlockType targetForActionImpl; // @synthesize targetForActionImpl=_targetForActionImpl;
@property(copy, nonatomic) CDUnknownBlockType shouldPaste; // @synthesize shouldPaste=_shouldPaste;
@property(copy, nonatomic) CDUnknownBlockType shouldCopy; // @synthesize shouldCopy=_shouldCopy;
- (void).cxx_destruct;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)textInputMode;
- (long long)keyboardAppearance;
- (void)deleteBackward;
- (void)handlePlainReturn:(id)arg1;
- (id)keyCommands;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (id)targetForAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)setContentSize:(struct CGSize)arg1;
- (void)setScrollEnabled:(_Bool)arg1;
- (_Bool)scrollEnabled;

@end

@interface ASEditableTextNode : ASDisplayNode <UITextViewDelegate, NSLayoutManagerDelegate, UIGestureRecognizerDelegate, UITextInputTraits>
{
    NSDictionary *_typingAttributes;
    id <ASEditableTextNodeDelegate> _delegate;
    _Bool _delegateDidUpdateEnqueued;
    // Error parsing type: {RecursiveMutex="_type"i""(?="_unfair"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_runfair"{?="_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_thread"A^{_opaque_pthread_t}"_count"i}"_plain"{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}"_recursive"{recursive_mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}})"_owner"{__thread_id="__id_"^{_opaque_pthread_t}}"_count"i}, name: _textKitLock
    ASTextKitComponents *_textKitComponents;
    ASTextKitComponents *_placeholderTextKitComponents;
    ASTextNodeWordKerner *_wordKerner;
    // Error parsing type: {RecursiveMutex="_type"i""(?="_unfair"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_runfair"{?="_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_thread"A^{_opaque_pthread_t}"_count"i}"_plain"{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}"_recursive"{recursive_mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}})"_owner"{__thread_id="__id_"^{_opaque_pthread_t}}"_count"i}, name: _textInputTraitsLock
    _ASTextInputTraitsPendingState *_textInputTraits;
    _Bool _displayingPlaceholder;
    _Bool _isPreservingSelection;
    _Bool _isPreservingText;
    _Bool _selectionChangedForEditedText;
    struct _NSRange _previousSelectedRange;
    _Bool _scrollEnabled;
    UIFont *_baseFont;
    unsigned long long _maximumLinesToDisplay;
    NSString *_initialPrimaryLanguage;
    struct UIEdgeInsets _textContainerInset;
}

@property(retain, nonatomic) NSString *initialPrimaryLanguage; // @synthesize initialPrimaryLanguage=_initialPrimaryLanguage;
@property(nonatomic) unsigned long long maximumLinesToDisplay; // @synthesize maximumLinesToDisplay=_maximumLinesToDisplay;
@property(nonatomic) struct UIEdgeInsets textContainerInset; // @synthesize textContainerInset=_textContainerInset;
@property(retain, nonatomic) UIFont *baseFont; // @synthesize baseFont=_baseFont;
@property(nonatomic) _Bool scrollEnabled; // @synthesize scrollEnabled=_scrollEnabled;
@property __weak id <ASEditableTextNodeDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (long long)indexOfAccessibilityElement:(id)arg1;
- (id)accessibilityElementAtIndex:(long long)arg1;
- (id)accessibilityElements;
- (long long)accessibilityElementCount;
- (void)_delegateDidFinishEditing;
- (void)_delegateDidUpdateText;
- (void)_delegateDidChangeSelectionFromSelectedRange:(struct _NSRange)arg1 toSelectedRange:(struct _NSRange)arg2;
- (_Bool)_delegateShouldChangeTextInRange:(struct _NSRange)arg1 replacementText:(id)arg2;
- (void)_delegateDidBeginEditing;
- (_Bool)_delegateShouldBeginEditing;
- (struct CGRect)frameForTextRange:(struct _NSRange)arg1;
- (_Bool)layoutManager:(id)arg1 shouldSetLineFragmentRect:(inout struct CGRect *)arg2 lineFragmentUsedRect:(inout struct CGRect *)arg3 baselineOffset:(inout double *)arg4 inTextContainer:(id)arg5 forGlyphRange:(struct _NSRange)arg6;
- (struct CGRect)layoutManager:(id)arg1 boundingBoxForControlGlyphAtIndex:(unsigned long long)arg2 forTextContainer:(id)arg3 proposedLineFragment:(struct CGRect)arg4 glyphPosition:(struct CGPoint)arg5 characterIndex:(unsigned long long)arg6;
- (long long)layoutManager:(id)arg1 shouldUseAction:(long long)arg2 forControlCharacterAtIndex:(unsigned long long)arg3;
- (unsigned long long)layoutManager:(id)arg1 shouldGenerateGlyphs:(const unsigned short *)arg2 properties:(const long long *)arg3 characterIndexes:(const unsigned long long *)arg4 font:(id)arg5 forGlyphRange:(struct _NSRange)arg6;
- (void)textViewDidEndEditing:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (_Bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)textViewDidBeginEditing:(id)arg1;
- (_Bool)textViewShouldBeginEditing:(id)arg1;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) long long returnKeyType;
@property(nonatomic) long long keyboardType;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(nonatomic) long long spellCheckingType;
@property(nonatomic) long long autocorrectionType;
@property(nonatomic) long long autocapitalizationType;
@property(readonly, nonatomic) _ASTextInputTraitsPendingState *textInputTraits;
- (_Bool)resignFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (_Bool)isFirstResponder;
@property(readonly, nonatomic) UITextInputMode *textInputMode; // @dynamic textInputMode;
- (void)_layoutTextView;
- (void)_updateDisplayingPlaceholder;
- (_Bool)isCurrentlyEmoji;
- (void)dropAutocorrection;
- (void)resetInitialPrimaryLanguage;
@property(copy, nonatomic) NSAttributedString *attributedText; // @dynamic attributedText;
@property(copy, nonatomic) NSAttributedString *attributedPlaceholderText; // @dynamic attributedPlaceholderText;
- (_Bool)isDisplayingPlaceholder;
@property(readonly) struct CGRect selectionRect;
@property struct _NSRange selectedRange; // @dynamic selectedRange;
@property(copy, nonatomic) NSDictionary *typingAttributes; // @dynamic typingAttributes;
@property(readonly, nonatomic) UITextView *textView;
- (_Bool)supportsLayerBacking;
- (void)setLayerBacked:(_Bool)arg1;
- (void)setOpaque:(_Bool)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layout;
- (struct CGSize)calculateSizeThatFits:(struct CGSize)arg1;
- (void)tapGesture:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)didLoad;
- (id)initWithTextKitComponents:(id)arg1 placeholderTextKitComponents:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) long long smartDashesType;
@property(nonatomic) long long smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType;
@property(readonly) Class superclass;
@property(copy, nonatomic) NSString *textContentType;

@end

@interface ASEventLog : NSObject
{
    // Error parsing type: {RecursiveMutex="_type"i""(?="_unfair"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_runfair"{?="_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_thread"A^{_opaque_pthread_t}"_count"i}"_plain"{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}"_recursive"{recursive_mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}})"_owner"{__thread_id="__id_"^{_opaque_pthread_t}}"_count"i}, name: __instanceLock__
    long long _eventLogHead;
    NSString *_objectDescription;
}

+ (id)contentsCache;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;
- (id)events;
- (void)logEventWithBacktrace:(id)arg1 format:(id)arg2;
- (id)init;
- (id)initWithObject:(id)arg1;

@end

@interface ASHighlightOverlayLayer : CALayer
{
    NSArray *_rects;
    CALayer *_targetLayer;
}

+ (id)defaultActionForKey:(id)arg1;
+ (_Bool)needsDisplayForKey:(id)arg1;
+ (id)defaultValueForKey:(id)arg1;
@property(nonatomic) __weak CALayer *targetLayer; // @synthesize targetLayer=_targetLayer;
- (void).cxx_destruct;
- (id)hitTest:(struct CGPoint)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (id)initWithRects:(id)arg1 targetLayer:(id)arg2;
- (id)initWithRects:(id)arg1;

// Remaining properties
@property(nonatomic) struct CGColor *highlightColor; // @dynamic highlightColor;

@end

@interface ASImageNodeDrawParameters : NSObject
{
    UIImage *_image;
    _Bool _opaque;
    struct CGRect _bounds;
    double _contentsScale;
    UIColor *_backgroundColor;
    long long _contentMode;
    _Bool _cropEnabled;
    _Bool _forceUpscaling;
    struct CGSize _forcedSize;
    struct CGRect _cropRect;
    struct CGRect _cropDisplayBounds;
    CDUnknownBlockType _imageModificationBlock;
    CDUnknownBlockType _willDisplayNodeContentWithRenderingContext;
    CDUnknownBlockType _didDisplayNodeContentWithRenderingContext;
    CDUnknownBlockType _didDrawBlock;
}

- (void).cxx_destruct;

@end

@interface ASImageNodeContentsKey : NSObject
{
    _Bool _isOpaque;
    UIImage *_image;
    UIColor *_backgroundColor;
    CDUnknownBlockType _willDisplayNodeContentWithRenderingContext;
    CDUnknownBlockType _didDisplayNodeContentWithRenderingContext;
    CDUnknownBlockType _imageModificationBlock;
    struct CGSize _backingSize;
    struct CGRect _imageDrawRect;
}

@property(copy, nonatomic) CDUnknownBlockType imageModificationBlock; // @synthesize imageModificationBlock=_imageModificationBlock;
@property(copy, nonatomic) CDUnknownBlockType didDisplayNodeContentWithRenderingContext; // @synthesize didDisplayNodeContentWithRenderingContext=_didDisplayNodeContentWithRenderingContext;
@property(copy, nonatomic) CDUnknownBlockType willDisplayNodeContentWithRenderingContext; // @synthesize willDisplayNodeContentWithRenderingContext=_willDisplayNodeContentWithRenderingContext;
@property(copy, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property _Bool isOpaque; // @synthesize isOpaque=_isOpaque;
@property struct CGRect imageDrawRect; // @synthesize imageDrawRect=_imageDrawRect;
@property struct CGSize backingSize; // @synthesize backingSize=_backingSize;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

@interface ASImageNode : ASControlNode
{
    UIImage *_image;
    ASWeakMapEntry *_weakCacheEntry;
    UIColor *_placeholderColor;
    CDUnknownBlockType _displayCompletionBlock;
    ASTextNode *_debugLabelNode;
    _Bool _cropEnabled;
    _Bool _forceUpscaling;
    struct CGSize _forcedSize;
    struct CGRect _cropRect;
    struct CGRect _cropDisplayBounds;
    _Bool _displayWithoutProcessing;
    CDUnknownBlockType _imageModificationBlock;
    double _lastDisplayLinkFire;
}

+ (id)createContentsForkey:(id)arg1 drawParameters:(id)arg2 isCancelled:(CDUnknownBlockType)arg3;
+ (id)contentsForkey:(id)arg1 drawParameters:(id)arg2 isCancelled:(CDUnknownBlockType)arg3;
+ (id)displayWithParameters:(id)arg1 isCancelled:(CDUnknownBlockType)arg2;
+ (_Bool)shouldShowImageScalingOverlay;
+ (void)setShouldShowImageScalingOverlay:(_Bool)arg1;
@property(nonatomic) double lastDisplayLinkFire; // @synthesize lastDisplayLinkFire=_lastDisplayLinkFire;
@property(nonatomic) _Bool displayWithoutProcessing; // @synthesize displayWithoutProcessing=_displayWithoutProcessing;
- (void).cxx_destruct;
- (id)debugLabelAttributes;
- (void)layout;
@property(copy) CDUnknownBlockType imageModificationBlock; // @synthesize imageModificationBlock=_imageModificationBlock;
@property struct CGSize forcedSize;
@property _Bool forceUpscaling;
@property struct CGRect cropRect;
- (void)setCropEnabled:(_Bool)arg1 recropImmediately:(_Bool)arg2 inBounds:(struct CGRect)arg3;
@property(getter=isCropEnabled) _Bool cropEnabled;
- (void)clearContents;
- (void)setNeedsDisplayWithCompletion:(CDUnknownBlockType)arg1;
- (void)displayDidFinish;
- (id)drawParametersForAsyncLayer:(id)arg1;
@property(copy) UIColor *placeholderColor;
@property(retain) UIImage *image; // @synthesize image=_image;
- (void)_locked_setImage:(id)arg1;
- (struct CGSize)calculateSizeThatFits:(struct CGSize)arg1;
- (id)placeholderImage;
- (void)dealloc;
- (id)init;

@end

@interface ASInsetLayoutSpec : ASLayoutSpec
{
    struct UIEdgeInsets _insets;
}

+ (id)insetLayoutSpecWithInsets:(struct UIEdgeInsets)arg1 child:(id)arg2;
@property(nonatomic) struct UIEdgeInsets insets; // @synthesize insets=_insets;
- (id)calculateLayoutThatFits:(CDStruct_42a63532)arg1 restrictedToSize:(CDStruct_99d2e400)arg2 relativeToParentSize:(struct CGSize)arg3;
- (id)initWithInsets:(struct UIEdgeInsets)arg1 child:(id)arg2;

@end

@interface ASIntegerMap : NSObject <ASDescriptionProvider, NSCopying>
{
    struct unordered_map<long, long, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, long>>> _map;
    _Bool _isIdentity;
    _Bool _isEmpty;
    _Bool _immutable;
}

+ (id)mapForUpdateWithOldCount:(long long)arg1 deleted:(id)arg2 inserted:(id)arg3;
+ (id)emptyMap;
+ (id)identityMap;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)propertiesForDescription;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)inverseMap;
- (void)setInteger:(long long)arg1 forKey:(long long)arg2;
- (long long)integerForKey:(long long)arg1;

@end

@interface ASLayout : NSObject <ASDescriptionProvider>
{
    unsigned long long _layoutElementType;
    // Error parsing type: {atomic<bool>="__a_"AB}, name: _retainSublayoutElements
    id <ASLayoutElement> _layoutElement;
    NSArray *_sublayouts;
    struct CGSize _size;
    struct CGPoint _position;
}

+ (id)layoutWithLayoutElement:(id)arg1 size:(struct CGSize)arg2;
+ (id)layoutWithLayoutElement:(id)arg1 size:(struct CGSize)arg2 sublayouts:(id)arg3;
+ (id)layoutWithLayoutElement:(id)arg1 size:(struct CGSize)arg2 position:(struct CGPoint)arg3 sublayouts:(id)arg4;
+ (_Bool)shouldRetainSublayoutLayoutElements;
+ (void)setShouldRetainSublayoutLayoutElements:(_Bool)arg1;
@property(readonly, copy, nonatomic) NSArray *sublayouts; // @synthesize sublayouts=_sublayouts;
@property(nonatomic) struct CGPoint position; // @synthesize position=_position;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
@property(readonly, nonatomic) __weak id <ASLayoutElement> layoutElement; // @synthesize layoutElement=_layoutElement;
- (void).cxx_destruct;
- (id)_recursiveDescriptionForLayout:(id)arg1 level:(unsigned long long)arg2;
- (id)recursiveDescription;
- (id)description;
- (id)propertiesForDescription;
@property(readonly, nonatomic) struct CGRect frame; // @dynamic frame;
- (struct CGRect)frameForElement:(id)arg1;
@property(readonly, nonatomic) unsigned long long type; // @dynamic type;
- (_Bool)isEqual:(id)arg1;
- (id)filteredNodeLayoutTree;
- (_Bool)isFlattened;
- (void)retainSublayoutElements;
- (void)dealloc;
- (id)initWithLayoutElement:(id)arg1 size:(struct CGSize)arg2 position:(struct CGPoint)arg3 sublayouts:(id)arg4;

@end

@interface ASLayoutElementContext : NSObject
{
    int _transitionID;
}

@property(nonatomic) int transitionID; // @synthesize transitionID=_transitionID;
- (id)init;

@end

@interface ASLayoutElementStyle : NSObject <ASStackLayoutElement, ASAbsoluteLayoutElement, ASLayoutElementExtensibility, ASLocking>
{
    // Error parsing type: {RecursiveMutex="_type"i""(?="_unfair"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_runfair"{?="_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_thread"A^{_opaque_pthread_t}"_count"i}"_plain"{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}"_recursive"{recursive_mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}})"_owner"{__thread_id="__id_"^{_opaque_pthread_t}}"_count"i}, name: __instanceLock__
    struct ASLayoutElementStyleExtensions _extensions;
    // Error parsing type: {atomic<ASLayoutElementSize>="__a_"A{?}}, name: _size
    // Error parsing type: {atomic<double>="__a_"Ad}, name: _spacingBefore
    // Error parsing type: {atomic<double>="__a_"Ad}, name: _spacingAfter
    // Error parsing type: {atomic<double>="__a_"Ad}, name: _flexGrow
    // Error parsing type: {atomic<double>="__a_"Ad}, name: _flexShrink
    // Error parsing type: {atomic<ASDimension>="__a_"A{?}}, name: _flexBasis
    // Error parsing type: {atomic<ASStackLayoutAlignSelf>="__a_"AQ}, name: _alignSelf
    // Error parsing type: {atomic<double>="__a_"Ad}, name: _ascender
    // Error parsing type: {atomic<double>="__a_"Ad}, name: _descender
    // Error parsing type: {atomic<CGPoint>="__a_"A{CGPoint}}, name: _layoutPosition
    id <ASLayoutElementStyleDelegate> _delegate;
}

@property(readonly, nonatomic) __weak id <ASLayoutElementStyleDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)propertyDidChange:(id)arg1;
- (id)propertiesForDescription;
@property(readonly, copy) NSString *description;
- (struct UIEdgeInsets)layoutOptionExtensionEdgeInsetsAtIndex:(int)arg1;
- (void)setLayoutOptionExtensionEdgeInsets:(struct UIEdgeInsets)arg1 atIndex:(int)arg2;
- (long long)layoutOptionExtensionIntegerAtIndex:(int)arg1;
- (void)setLayoutOptionExtensionInteger:(long long)arg1 atIndex:(int)arg2;
- (_Bool)layoutOptionExtensionBoolAtIndex:(int)arg1;
- (void)setLayoutOptionExtensionBool:(_Bool)arg1 atIndex:(int)arg2;
@property(nonatomic) struct CGPoint layoutPosition;
@property(nonatomic) double descender;
@property(nonatomic) double ascender;
@property(nonatomic) unsigned long long alignSelf;
@property(nonatomic) CDStruct_7f320dbc flexBasis;
@property(nonatomic) double flexShrink;
@property(nonatomic) double flexGrow;
@property(nonatomic) double spacingAfter;
@property(nonatomic) double spacingBefore;
@property(nonatomic) CDStruct_69654f45 maxLayoutSize; // @dynamic maxLayoutSize;
@property(nonatomic) CDStruct_69654f45 minLayoutSize; // @dynamic minLayoutSize;
@property(nonatomic) CDStruct_69654f45 preferredLayoutSize; // @dynamic preferredLayoutSize;
@property(nonatomic) struct CGSize maxSize; // @dynamic maxSize;
@property(nonatomic) struct CGSize minSize; // @dynamic minSize;
@property(nonatomic) struct CGSize preferredSize; // @dynamic preferredSize;
@property(nonatomic) CDStruct_7f320dbc maxHeight; // @dynamic maxHeight;
@property(nonatomic) CDStruct_7f320dbc minHeight; // @dynamic minHeight;
@property(nonatomic) CDStruct_7f320dbc maxWidth; // @dynamic maxWidth;
@property(nonatomic) CDStruct_7f320dbc minWidth; // @dynamic minWidth;
@property(nonatomic) CDStruct_7f320dbc height; // @dynamic height;
@property(nonatomic) CDStruct_7f320dbc width; // @dynamic width;
- (void)setSize:(CDStruct_99d2e400)arg1;
- (CDStruct_99d2e400)size;
- (_Bool)tryLock;
- (void)unlock;
- (void)lock;
- (id)init;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ASLayoutManager : NSLayoutManager
{
}

- (void)showCGGlyphs:(const unsigned short *)arg1 positions:(const struct CGPoint *)arg2 count:(unsigned long long)arg3 font:(id)arg4 matrix:(struct CGAffineTransform)arg5 attributes:(id)arg6 inContext:(struct CGContext *)arg7;

@end

@interface ASLayoutSpec : NSObject <ASDebugNameProvider, ASLayoutElement, ASLayoutElementStylability, NSFastEnumeration, ASDescriptionProvider, ASLocking>
{
    // Error parsing type: {RecursiveMutex="_type"i""(?="_unfair"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_runfair"{?="_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_thread"A^{_opaque_pthread_t}"_count"i}"_plain"{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}"_recursive"{recursive_mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}})"_owner"{__thread_id="__id_"^{_opaque_pthread_t}}"_count"i}, name: __instanceLock__
    // Error parsing type: {atomic<ASPrimitiveTraitCollection>="__a_"A{?}}, name: _primitiveTraitCollection
    ASLayoutElementStyle *_style;
    NSMutableArray *_childrenArray;
    _Bool _isMutable;
    NSString *_debugName;
}

+ (id)asciiArtStringForChildren:(id)arg1 parentName:(id)arg2;
+ (id)asciiArtStringForChildren:(id)arg1 parentName:(id)arg2 direction:(unsigned long long)arg3;
@property(nonatomic) _Bool isMutable; // @synthesize isMutable=_isMutable;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)tryLock;
- (void)unlock;
- (void)lock;
- (id)asciiArtName;
- (id)asciiArtString;
@property(copy, nonatomic) NSString *debugName;
@property(readonly, copy) NSString *description;
- (id)propertiesForDescription;
- (struct UIEdgeInsets)layoutOptionExtensionEdgeInsetsAtIndex:(int)arg1;
- (void)setLayoutOptionExtensionEdgeInsets:(struct UIEdgeInsets)arg1 atIndex:(int)arg2;
- (long long)layoutOptionExtensionIntegerAtIndex:(int)arg1;
- (void)setLayoutOptionExtensionInteger:(long long)arg1 atIndex:(int)arg2;
- (_Bool)layoutOptionExtensionBoolAtIndex:(int)arg1;
- (void)setLayoutOptionExtensionBool:(_Bool)arg1 atIndex:(int)arg2;
- (void)setPrimitiveTraitCollection:(CDStruct_104667ad)arg1;
- (CDStruct_104667ad)primitiveTraitCollection;
- (id)asyncTraitCollection;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)sublayoutElements;
@property(retain, nonatomic) NSArray *children;
@property(retain, nonatomic) id <ASLayoutElement> child;
- (id)calculateLayoutThatFits:(CDStruct_42a63532)arg1;
- (id)calculateLayoutThatFits:(CDStruct_42a63532)arg1 restrictedToSize:(CDStruct_99d2e400)arg2 relativeToParentSize:(struct CGSize)arg3;
- (id)layoutThatFits:(CDStruct_42a63532)arg1 parentSize:(struct CGSize)arg2;
- (id)layoutThatFits:(CDStruct_42a63532)arg1;
- (id)styledWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) ASLayoutElementStyle *style;
- (_Bool)implementsLayoutMethod;
- (_Bool)canLayoutAsynchronous;
@property(readonly, nonatomic) unsigned long long layoutElementType; // @dynamic layoutElementType;
- (id)init;
- (id)childAtIndex:(unsigned long long)arg1;
- (void)setChild:(id)arg1 atIndex:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ASWrapperLayoutSpec : ASLayoutSpec
{
}

+ (id)wrapperWithLayoutElements:(id)arg1;
+ (id)wrapperWithLayoutElement:(id)arg1;
- (id)calculateLayoutThatFits:(CDStruct_42a63532)arg1;
- (id)initWithLayoutElements:(id)arg1;
- (id)initWithLayoutElement:(id)arg1;

@end

@interface ASNullLayoutSpec : ASLayoutSpec
{
}

+ (id)null;
- (id)calculateLayoutThatFits:(CDStruct_42a63532)arg1;
- (_Bool)isMutable;

@end

@interface ASLayoutTransition : NSObject <_ASTransitionContextLayoutDelegate>
{
    struct shared_ptr<AS::RecursiveMutex> __instanceLock__;
    _Bool _calculatedSubnodeOperations;
    NSArray *_insertedSubnodes;
    NSArray *_removedSubnodes;
    struct vector<unsigned long, std::__1::allocator<unsigned long>> _insertedSubnodePositions;
    struct vector<std::__1::pair<ASDisplayNode *, unsigned long>, std::__1::allocator<std::__1::pair<ASDisplayNode *, unsigned long>>> _subnodeMoves;
    struct ASDisplayNodeLayout _pendingLayout;
    struct ASDisplayNodeLayout _previousLayout;
    ASDisplayNode *_node;
}

@property(readonly, nonatomic) const struct ASDisplayNodeLayout *pendingLayout; // @synthesize pendingLayout=_pendingLayout;
@property(readonly, nonatomic) const struct ASDisplayNodeLayout *previousLayout; // @synthesize previousLayout=_previousLayout;
@property(readonly, nonatomic) __weak ASDisplayNode *node; // @synthesize node=_node;
- (id).cxx_construct;
- (void).cxx_destruct;
- (CDStruct_42a63532)transitionContext:(id)arg1 constrainedSizeForKey:(id)arg2;
- (id)transitionContext:(id)arg1 layoutForKey:(id)arg2;
- (id)removedSubnodesWithTransitionContext:(id)arg1;
- (id)insertedSubnodesWithTransitionContext:(id)arg1;
- (id)currentSubnodesWithTransitionContext:(id)arg1;
- (void)calculateSubnodeOperationsIfNeeded;
- (void)applySubnodeRemovals;
- (void)applySubnodeInsertionsAndMoves;
- (void)commitTransition;
@property(readonly, nonatomic) _Bool isSynchronous;
- (id)initWithNode:(id)arg1 pendingLayout:(const struct ASDisplayNodeLayout *)arg2 previousLayout:(const struct ASDisplayNodeLayout *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ASMainSerialQueue : NSObject
{
    // Error parsing type: {Mutex="_type"i""(?="_unfair"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_runfair"{?="_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_thread"A^{_opaque_pthread_t}"_count"i}"_plain"{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}"_recursive"{recursive_mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}})"_owner"{__thread_id="__id_"^{_opaque_pthread_t}}"_count"i}, name: _serialQueueLock
    NSMutableArray *_blocks;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;
- (void)runBlocks;
- (void)performBlockOnMainThread:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long numberOfScheduledBlocks;
- (id)init;

@end

@interface ASMutableAttributedStringBuilder : NSMutableAttributedString
{
    _Bool _setRange;
    struct _NSRange _pendingRange;
    NSMutableDictionary *_pendingRangeAttributes;
    NSMutableAttributedString *_attrStr;
    NSString *_initString;
}

- (void).cxx_destruct;
- (void)endEditing;
- (void)beginEditing;
- (id)mutableString;
- (id)string;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (unsigned long long)length;
- (id)composedAttributedString;
- (void)removeAttribute:(id)arg1 range:(struct _NSRange)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)setAttributedString:(id)arg1;
- (void)deleteCharactersInRange:(struct _NSRange)arg1;
- (void)appendAttributedString:(id)arg1;
- (void)insertAttributedString:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)_applyPendingRangeAttributions;
- (id)_pendingRangeAttributes;
- (id)_attributedString;
- (id)initWithAttributedString:(id)arg1;
- (id)initWithString:(id)arg1 attributes:(id)arg2;
- (id)initWithString:(id)arg1;
- (id)init;

@end

@interface ASNetworkImageLoadInfo : NSObject <NSCopying>
{
    long long _sourceType;
    NSURL *_url;
    id _downloadIdentifier;
    id _userInfo;
}

@property(readonly) id userInfo; // @synthesize userInfo=_userInfo;
@property(readonly) id downloadIdentifier; // @synthesize downloadIdentifier=_downloadIdentifier;
@property(readonly) NSURL *url; // @synthesize url=_url;
@property(readonly) long long sourceType; // @synthesize sourceType=_sourceType;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithURL:(id)arg1 sourceType:(long long)arg2 downloadIdentifier:(id)arg3 userInfo:(id)arg4;

@end

@interface ASNodeController : NSObject <ASInterfaceStateDelegate, ASLocking>
{
    ASDisplayNode *_strongNode;
    ASDisplayNode *_weakNode;
    // Error parsing type: {RecursiveMutex="_type"i""(?="_unfair"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_runfair"{?="_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_thread"A^{_opaque_pthread_t}"_count"i}"_plain"{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}"_recursive"{recursive_mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}})"_owner"{__thread_id="__id_"^{_opaque_pthread_t}}"_count"i}, name: __instanceLock__
    _Bool _shouldInvertStrongReference;
}

@property(nonatomic) _Bool shouldInvertStrongReference; // @synthesize shouldInvertStrongReference=_shouldInvertStrongReference;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)tryLock;
- (void)unlock;
- (void)lock;
- (CDStruct_ac21a0f6)lockPair;
- (void)hierarchyDisplayDidFinish;
- (void)interfaceStateDidChange:(unsigned long long)arg1 fromState:(unsigned long long)arg2;
- (void)didExitPreloadState;
- (void)didEnterPreloadState;
- (void)didExitDisplayState;
- (void)didEnterDisplayState;
- (void)didExitVisibleState;
- (void)didEnterVisibleState;
- (void)nodeWillCalculateLayout:(CDStruct_42a63532)arg1;
- (void)nodeDidLayout;
- (void)nodeDidLoad;
@property(retain, nonatomic) ASDisplayNode *node;
- (void)setupReferencesWithNode:(id)arg1;
- (void)loadNode;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ASOverlayLayoutSpec : ASLayoutSpec
{
}

+ (id)overlayLayoutSpecWithChild:(id)arg1 overlay:(id)arg2;
- (id)calculateLayoutThatFits:(CDStruct_42a63532)arg1 restrictedToSize:(CDStruct_99d2e400)arg2 relativeToParentSize:(struct CGSize)arg3;
@property(retain, nonatomic) id <ASLayoutElement> overlay;
- (id)child;
- (void)setChild:(id)arg1;
- (id)initWithChild:(id)arg1 overlay:(id)arg2;

@end

@interface ASPendingStateController : NSObject
{
    // Error parsing type: {Mutex="_type"i""(?="_unfair"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_runfair"{?="_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_thread"A^{_opaque_pthread_t}"_count"i}"_plain"{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}"_recursive"{recursive_mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}})"_owner"{__thread_id="__id_"^{_opaque_pthread_t}}"_count"i}, name: _lock
    struct ASPendingStateControllerFlags _flags;
    _Bool _hasChanges;
    ASWeakSet *_dirtyNodes;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) ASWeakSet *dirtyNodes; // @synthesize dirtyNodes=_dirtyNodes;
@property(readonly, nonatomic) _Bool hasChanges; // @synthesize hasChanges=_hasChanges;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)scheduleFlushIfNeeded;
- (void)flush;
- (void)registerNode:(id)arg1;
- (id)init;
- (_Bool)test_isFlushScheduled;

@end

@interface ASRatioLayoutSpec : ASLayoutSpec
{
    double _ratio;
}

+ (id)ratioLayoutSpecWithRatio:(double)arg1 child:(id)arg2;
@property(nonatomic) double ratio; // @synthesize ratio=_ratio;
- (id)calculateLayoutThatFits:(CDStruct_42a63532)arg1;
- (id)initWithRatio:(double)arg1 child:(id)arg2;
- (id)asciiArtName;

@end

@interface ASRelativeLayoutSpec : ASLayoutSpec
{
    unsigned long long _horizontalPosition;
    unsigned long long _verticalPosition;
    unsigned long long _sizingOption;
}

+ (id)relativePositionLayoutSpecWithHorizontalPosition:(unsigned long long)arg1 verticalPosition:(unsigned long long)arg2 sizingOption:(unsigned long long)arg3 child:(id)arg4;
@property(nonatomic) unsigned long long sizingOption; // @synthesize sizingOption=_sizingOption;
@property(nonatomic) unsigned long long verticalPosition; // @synthesize verticalPosition=_verticalPosition;
@property(nonatomic) unsigned long long horizontalPosition; // @synthesize horizontalPosition=_horizontalPosition;
- (double)proportionOfAxisForAxisPosition:(unsigned long long)arg1;
- (id)calculateLayoutThatFits:(CDStruct_42a63532)arg1;
- (id)initWithHorizontalPosition:(unsigned long long)arg1 verticalPosition:(unsigned long long)arg2 sizingOption:(unsigned long long)arg3 child:(id)arg4;

@end

@interface ASResponderChainEnumerator : NSEnumerator
{
    UIResponder *_currentResponder;
}

- (void).cxx_destruct;
- (id)nextObject;
- (id)initWithResponder:(id)arg1;

@end

@interface ASDeallocQueue : NSObject
{
    struct vector<const void *, std::__1::allocator<const void *>> _queue;
    // Error parsing type: {Mutex="_type"i""(?="_unfair"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_runfair"{?="_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_thread"A^{_opaque_pthread_t}"_count"i}"_plain"{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}"_recursive"{recursive_mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}})"_owner"{__thread_id="__id_"^{_opaque_pthread_t}}"_count"i}, name: _lock
}

+ (id)sharedDeallocationQueue;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)drain;
- (void)releaseObjectInBackground:(id *)arg1;
- (void)dealloc;

@end

@interface ASAbstractRunLoopQueue : NSObject
{
}

- (id)init;

@end

@interface ASRunLoopQueue : ASAbstractRunLoopQueue <ASLocking>
{
    struct __CFRunLoop *_runLoop;
    struct __CFRunLoopSource *_runLoopSource;
    struct __CFRunLoopObserver *_runLoopObserver;
    NSPointerArray *_internalQueue;
    // Error parsing type: {RecursiveMutex="_type"i""(?="_unfair"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_runfair"{?="_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_thread"A^{_opaque_pthread_t}"_count"i}"_plain"{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}"_recursive"{recursive_mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}})"_owner"{__thread_id="__id_"^{_opaque_pthread_t}}"_count"i}, name: _internalQueueLock
    unsigned long long _rootActivity;
    _Bool _ensureExclusiveMembership;
    unsigned long long _batchSize;
    CDUnknownBlockType _queueConsumer;
}

@property(copy, nonatomic) CDUnknownBlockType queueConsumer; // @synthesize queueConsumer=_queueConsumer;
@property(nonatomic) _Bool ensureExclusiveMembership; // @synthesize ensureExclusiveMembership=_ensureExclusiveMembership;
@property(nonatomic) unsigned long long batchSize; // @synthesize batchSize=_batchSize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)tryLock;
- (void)unlock;
- (void)lock;
@property(readonly) _Bool isEmpty;
- (void)enqueue:(id)arg1;
- (void)processQueue;
- (void)dealloc;
- (id)initWithRunLoop:(struct __CFRunLoop *)arg1 retainObjects:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface ASCATransactionQueue : ASAbstractRunLoopQueue
{
    struct __CFRunLoopSource *_runLoopSource;
    struct __CFRunLoopObserver *_preTransactionObserver;
    struct vector<id<ASCATransactionQueueObserving>, std::__1::allocator<id<ASCATransactionQueueObserving>>> _internalQueue;
    struct __CFSet *_internalQueueHashSet;
    struct vector<id<ASCATransactionQueueObserving>, std::__1::allocator<id<ASCATransactionQueueObserving>>> _batchBuffer;
    // Error parsing type: {Mutex="_type"i""(?="_unfair"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_runfair"{?="_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_thread"A^{_opaque_pthread_t}"_count"i}"_plain"{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}"_recursive"{recursive_mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}})"_owner"{__thread_id="__id_"^{_opaque_pthread_t}}"_count"i}, name: _internalQueueLock
    unsigned long long _rootActivity;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, getter=isEnabled) _Bool enabled;
@property(readonly) _Bool isEmpty;
- (void)enqueue:(id)arg1;
- (void)processQueue;
- (void)dealloc;
- (id)init;

@end

@interface ASScrollView : UIScrollView
{
}

+ (Class)layerClass;
- (id)accessibilityElements;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
- (_Bool)touchesShouldCancelInContentView:(id)arg1;
- (id)scrollNode;

@end

@interface ASScrollNode : ASDisplayNode
{
    long long _scrollableDirections;
    _Bool _automaticallyManagesContentSize;
    struct CGSize _contentCalculatedSizeFromLayout;
    _Bool _canCancelAllTouchesInViews;
}

@property _Bool canCancelAllTouchesInViews; // @synthesize canCancelAllTouchesInViews=_canCancelAllTouchesInViews;
@property long long scrollableDirections;
@property _Bool automaticallyManagesContentSize;
- (void)layout;
- (id)calculateLayoutThatFits:(CDStruct_42a63532)arg1 restrictedToSize:(CDStruct_99d2e400)arg2 relativeToParentSize:(struct CGSize)arg3;
- (id)init;

// Remaining properties
@property(readonly) UIScrollView *view; // @dynamic view;

@end

@interface ASStackLayoutSpec : ASLayoutSpec
{
    _Bool _concurrent;
    unsigned long long _direction;
    double _spacing;
    unsigned long long _horizontalAlignment;
    unsigned long long _verticalAlignment;
    unsigned long long _justifyContent;
    unsigned long long _alignItems;
    unsigned long long _flexWrap;
    unsigned long long _alignContent;
    double _lineSpacing;
}

+ (id)horizontalStackLayoutSpec;
+ (id)verticalStackLayoutSpec;
+ (id)stackLayoutSpecWithDirection:(unsigned long long)arg1 spacing:(double)arg2 justifyContent:(unsigned long long)arg3 alignItems:(unsigned long long)arg4 flexWrap:(unsigned long long)arg5 alignContent:(unsigned long long)arg6 lineSpacing:(double)arg7 children:(id)arg8;
+ (id)stackLayoutSpecWithDirection:(unsigned long long)arg1 spacing:(double)arg2 justifyContent:(unsigned long long)arg3 alignItems:(unsigned long long)arg4 flexWrap:(unsigned long long)arg5 alignContent:(unsigned long long)arg6 children:(id)arg7;
+ (id)stackLayoutSpecWithDirection:(unsigned long long)arg1 spacing:(double)arg2 justifyContent:(unsigned long long)arg3 alignItems:(unsigned long long)arg4 children:(id)arg5;
@property(nonatomic, getter=isConcurrent) _Bool concurrent; // @synthesize concurrent=_concurrent;
@property(nonatomic) double lineSpacing; // @synthesize lineSpacing=_lineSpacing;
@property(nonatomic) unsigned long long alignContent; // @synthesize alignContent=_alignContent;
@property(nonatomic) unsigned long long flexWrap; // @synthesize flexWrap=_flexWrap;
@property(nonatomic) unsigned long long alignItems; // @synthesize alignItems=_alignItems;
@property(nonatomic) unsigned long long justifyContent; // @synthesize justifyContent=_justifyContent;
@property(nonatomic) unsigned long long verticalAlignment; // @synthesize verticalAlignment=_verticalAlignment;
@property(nonatomic) unsigned long long horizontalAlignment; // @synthesize horizontalAlignment=_horizontalAlignment;
@property(nonatomic) double spacing; // @synthesize spacing=_spacing;
@property(nonatomic) unsigned long long direction; // @synthesize direction=_direction;
- (id)propertiesForDescription;
- (void)resolveVerticalAlignment;
- (void)resolveHorizontalAlignment;
- (id)calculateLayoutThatFits:(CDStruct_42a63532)arg1;
- (id)initWithDirection:(unsigned long long)arg1 spacing:(double)arg2 justifyContent:(unsigned long long)arg3 alignItems:(unsigned long long)arg4 flexWrap:(unsigned long long)arg5 alignContent:(unsigned long long)arg6 lineSpacing:(double)arg7 children:(id)arg8;
- (id)init;
- (id)asciiArtString;

@end

@interface ASTextBackedString : NSObject <NSCoding, NSCopying>
{
    NSString *_string;
}

+ (id)stringWithString:(id)arg1;
@property(copy, nonatomic) NSString *string; // @synthesize string=_string;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface ASTextBinding : NSObject <NSCoding, NSCopying>
{
    _Bool _deleteConfirm;
}

+ (id)bindingWithDeleteConfirm:(_Bool)arg1;
@property(nonatomic) _Bool deleteConfirm; // @synthesize deleteConfirm=_deleteConfirm;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface ASTextShadow : NSObject <NSCoding, NSCopying>
{
    int _blendMode;
    UIColor *_color;
    double _radius;
    ASTextShadow *_subShadow;
    struct CGSize _offset;
}

+ (id)shadowWithNSShadow:(id)arg1;
+ (id)shadowWithColor:(id)arg1 offset:(struct CGSize)arg2 radius:(double)arg3;
@property(retain, nonatomic) ASTextShadow *subShadow; // @synthesize subShadow=_subShadow;
@property(nonatomic) int blendMode; // @synthesize blendMode=_blendMode;
@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) struct CGSize offset; // @synthesize offset=_offset;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)nsShadow;

@end

@interface ASTextDecoration : NSObject <NSCoding, NSCopying>
{
    long long _style;
    NSNumber *_width;
    UIColor *_color;
    ASTextShadow *_shadow;
}

+ (id)decorationWithStyle:(long long)arg1 width:(id)arg2 color:(id)arg3;
+ (id)decorationWithStyle:(long long)arg1;
@property(retain, nonatomic) ASTextShadow *shadow; // @synthesize shadow=_shadow;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
@property(retain, nonatomic) NSNumber *width; // @synthesize width=_width;
@property(nonatomic) long long style; // @synthesize style=_style;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;

@end

@interface ASTextBorder : NSObject <NSCoding, NSCopying>
{
    int _lineJoin;
    long long _lineStyle;
    double _strokeWidth;
    UIColor *_strokeColor;
    double _cornerRadius;
    ASTextShadow *_shadow;
    UIColor *_fillColor;
    struct UIEdgeInsets _insets;
}

+ (id)borderWithFillColor:(id)arg1 cornerRadius:(double)arg2;
+ (id)borderWithLineStyle:(long long)arg1 lineWidth:(double)arg2 strokeColor:(id)arg3;
@property(retain, nonatomic) UIColor *fillColor; // @synthesize fillColor=_fillColor;
@property(retain, nonatomic) ASTextShadow *shadow; // @synthesize shadow=_shadow;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
@property(nonatomic) struct UIEdgeInsets insets; // @synthesize insets=_insets;
@property(nonatomic) int lineJoin; // @synthesize lineJoin=_lineJoin;
@property(retain, nonatomic) UIColor *strokeColor; // @synthesize strokeColor=_strokeColor;
@property(nonatomic) double strokeWidth; // @synthesize strokeWidth=_strokeWidth;
@property(nonatomic) long long lineStyle; // @synthesize lineStyle=_lineStyle;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;

@end

@interface ASTextAttachment : NSObject <NSCoding, NSCopying>
{
    id _content;
    long long _contentMode;
    NSDictionary *_userInfo;
    struct UIEdgeInsets _contentInsets;
}

+ (id)attachmentWithContent:(id)arg1;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
@property(nonatomic) long long contentMode; // @synthesize contentMode=_contentMode;
@property(retain, nonatomic) id content; // @synthesize content=_content;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface ASTextHighlight : NSObject <NSCopying>
{
    NSDictionary *_attributes;
    NSDictionary *_userInfo;
    CDUnknownBlockType _tapAction;
    CDUnknownBlockType _longPressAction;
}

+ (id)highlightWithBackgroundColor:(id)arg1;
+ (id)highlightWithAttributes:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType longPressAction; // @synthesize longPressAction=_longPressAction;
@property(copy, nonatomic) CDUnknownBlockType tapAction; // @synthesize tapAction=_tapAction;
@property(copy, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(copy, nonatomic) NSDictionary *attributes; // @synthesize attributes=_attributes;
- (void).cxx_destruct;
- (void)setAttachment:(id)arg1;
- (void)setBorder:(id)arg1;
- (void)setBackgroundBorder:(id)arg1;
- (void)setStrikethrough:(id)arg1;
- (void)setUnderline:(id)arg1;
- (void)setInnerShadow:(id)arg1;
- (void)setShadow:(id)arg1;
- (void)setTextAttribute:(id)arg1 value:(id)arg2;
- (void)setStrokeColor:(id)arg1;
- (void)setStrokeWidth:(id)arg1;
- (void)setColor:(id)arg1;
- (void)setFont:(id)arg1;
- (void)_makeMutableAttributes;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface ASTextDebugOption : NSObject <NSCopying>
{
    UIColor *_baselineColor;
    UIColor *_CTFrameBorderColor;
    UIColor *_CTFrameFillColor;
    UIColor *_CTLineBorderColor;
    UIColor *_CTLineFillColor;
    UIColor *_CTLineNumberColor;
    UIColor *_CTRunBorderColor;
    UIColor *_CTRunFillColor;
    UIColor *_CTRunNumberColor;
    UIColor *_CGGlyphBorderColor;
    UIColor *_CGGlyphFillColor;
}

+ (void)setSharedDebugOption:(id)arg1;
+ (id)sharedDebugOption;
+ (void)removeDebugTarget:(id)arg1;
+ (void)addDebugTarget:(id)arg1;
@property(retain, nonatomic) UIColor *CGGlyphFillColor; // @synthesize CGGlyphFillColor=_CGGlyphFillColor;
@property(retain, nonatomic) UIColor *CGGlyphBorderColor; // @synthesize CGGlyphBorderColor=_CGGlyphBorderColor;
@property(retain, nonatomic) UIColor *CTRunNumberColor; // @synthesize CTRunNumberColor=_CTRunNumberColor;
@property(retain, nonatomic) UIColor *CTRunFillColor; // @synthesize CTRunFillColor=_CTRunFillColor;
@property(retain, nonatomic) UIColor *CTRunBorderColor; // @synthesize CTRunBorderColor=_CTRunBorderColor;
@property(retain, nonatomic) UIColor *CTLineNumberColor; // @synthesize CTLineNumberColor=_CTLineNumberColor;
@property(retain, nonatomic) UIColor *CTLineFillColor; // @synthesize CTLineFillColor=_CTLineFillColor;
@property(retain, nonatomic) UIColor *CTLineBorderColor; // @synthesize CTLineBorderColor=_CTLineBorderColor;
@property(retain, nonatomic) UIColor *CTFrameFillColor; // @synthesize CTFrameFillColor=_CTFrameFillColor;
@property(retain, nonatomic) UIColor *CTFrameBorderColor; // @synthesize CTFrameBorderColor=_CTFrameBorderColor;
@property(retain, nonatomic) UIColor *baselineColor; // @synthesize baselineColor=_baselineColor;
- (void).cxx_destruct;
- (void)clear;
- (_Bool)needDrawDebug;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface ASTextPosition : UITextPosition <NSCopying>
{
    long long _offset;
    long long _affinity;
}

+ (id)positionWithOffset:(long long)arg1 affinity:(long long)arg2;
+ (id)positionWithOffset:(long long)arg1;
@property(readonly, nonatomic) long long affinity; // @synthesize affinity=_affinity;
@property(readonly, nonatomic) long long offset; // @synthesize offset=_offset;
- (long long)compare:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface ASTextRange : UITextRange <NSCopying>
{
    ASTextPosition *_start;
    ASTextPosition *_end;
}

+ (id)defaultRange;
+ (id)rangeWithStart:(id)arg1 end:(id)arg2;
+ (id)rangeWithRange:(struct _NSRange)arg1 affinity:(long long)arg2;
+ (id)rangeWithRange:(struct _NSRange)arg1;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct _NSRange)asRange;
@property(readonly, nonatomic, getter=isEmpty) _Bool empty;
@property(readonly, nonatomic) ASTextPosition *end;
@property(readonly, nonatomic) ASTextPosition *start;
- (id)init;

@end

@interface ASTextSelectionRect : UITextSelectionRect <NSCopying>
{
    _Bool _containsStart;
    _Bool _containsEnd;
    _Bool _isVertical;
    long long _writingDirection;
    struct CGRect _rect;
}

@property(nonatomic) _Bool isVertical; // @synthesize isVertical=_isVertical;
@property(nonatomic) _Bool containsEnd; // @synthesize containsEnd=_containsEnd;
@property(nonatomic) _Bool containsStart; // @synthesize containsStart=_containsStart;
@property(nonatomic) long long writingDirection; // @synthesize writingDirection=_writingDirection;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface ASTextKitComponentsTextView : UITextView
{
    _Bool _deallocating;
    struct CGRect _threadSafeBounds;
}

@property struct CGRect threadSafeBounds; // @synthesize threadSafeBounds=_threadSafeBounds;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;

@end

@interface ASTextKitComponents : NSObject
{
    NSTextStorage *_textStorage;
    NSTextContainer *_textContainer;
    NSLayoutManager *_layoutManager;
    ASTextKitComponentsTextView *_textView;
}

+ (_Bool)needsMainThreadDeallocation;
+ (id)componentsWithTextStorage:(id)arg1 textContainerSize:(struct CGSize)arg2 layoutManager:(id)arg3;
+ (id)componentsWithAttributedSeedString:(id)arg1 textContainerSize:(struct CGSize)arg2;
@property(retain, nonatomic) ASTextKitComponentsTextView *textView; // @synthesize textView=_textView;
@property(retain, nonatomic) NSLayoutManager *layoutManager; // @synthesize layoutManager=_layoutManager;
@property(retain, nonatomic) NSTextContainer *textContainer; // @synthesize textContainer=_textContainer;
@property(retain, nonatomic) NSTextStorage *textStorage; // @synthesize textStorage=_textStorage;
- (void).cxx_destruct;
- (struct CGSize)sizeForConstrainedWidth:(double)arg1 forMaxNumberOfLines:(long long)arg2;
- (struct CGSize)sizeForConstrainedWidth:(double)arg1;
- (void)dealloc;

@end

@interface ASTextKitContext : NSObject
{
    struct shared_ptr<AS::Mutex> __instanceLock__;
    NSLayoutManager *_layoutManager;
    NSTextStorage *_textStorage;
    NSTextContainer *_textContainer;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)performBlockWithLockedTextKitComponents:(CDUnknownBlockType)arg1;
- (id)initWithAttributedString:(id)arg1 lineBreakMode:(long long)arg2 maximumNumberOfLines:(unsigned long long)arg3 exclusionPaths:(id)arg4 constrainedSize:(struct CGSize)arg5;

@end

@interface ASTextKitEntityAttribute : NSObject
{
    id <NSObject> _entity;
}

@property(readonly, nonatomic) id <NSObject> entity; // @synthesize entity=_entity;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithEntity:(id)arg1;

@end

@interface ASTextKitFontSizeAdjuster : NSObject
{
    ASTextKitContext *_context;
    struct ASTextKitAttributes _attributes;
    _Bool _measured;
    double _scaleFactor;
    // Error parsing type: {Mutex="_type"i""(?="_unfair"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_runfair"{?="_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_thread"A^{_opaque_pthread_t}"_count"i}"_plain"{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}"_recursive"{recursive_mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}})"_owner"{__thread_id="__id_"^{_opaque_pthread_t}}"_count"i}, name: __instanceLock__
    NSLayoutManager *_sizingLayoutManager;
    NSTextContainer *_sizingTextContainer;
    struct CGSize _constrainedSize;
}

+ (void)adjustFontSizeForAttributeString:(id)arg1 withScaleFactor:(double)arg2;
@property(nonatomic) struct CGSize constrainedSize; // @synthesize constrainedSize=_constrainedSize;
@property(readonly, nonatomic) NSTextContainer *sizingTextContainer; // @synthesize sizingTextContainer=_sizingTextContainer;
- (id).cxx_construct;
- (void).cxx_destruct;
- (double)scaleFactor;
@property(readonly, nonatomic) NSLayoutManager *sizingLayoutManager; // @synthesize sizingLayoutManager=_sizingLayoutManager;
- (struct CGSize)boundingBoxForString:(id)arg1;
- (unsigned long long)lineCountForString:(id)arg1;
- (id)initWithContext:(id)arg1 constrainedSize:(struct CGSize)arg2 textKitAttributes:(const struct ASTextKitAttributes *)arg3;

@end

@interface ASTextKitRenderer : NSObject
{
    struct CGSize _calculatedSize;
    ASTextKitContext *_context;
    ASTextKitShadower *_shadower;
    id <ASTextKitTruncating> _truncater;
    ASTextKitFontSizeAdjuster *_fontSizeAdjuster;
    double _currentScaleFactor;
    struct CGSize _constrainedSize;
    struct ASTextKitAttributes _attributes;
}

@property(readonly, nonatomic) double currentScaleFactor; // @synthesize currentScaleFactor=_currentScaleFactor;
@property(readonly, nonatomic) struct CGSize constrainedSize; // @synthesize constrainedSize=_constrainedSize;
@property(readonly, nonatomic) ASTextKitFontSizeAdjuster *fontSizeAdjuster; // @synthesize fontSizeAdjuster=_fontSizeAdjuster;
@property(readonly, nonatomic) id <ASTextKitTruncating> truncater; // @synthesize truncater=_truncater;
@property(readonly, nonatomic) ASTextKitShadower *shadower; // @synthesize shadower=_shadower;
@property(readonly, nonatomic) ASTextKitContext *context; // @synthesize context=_context;
@property(readonly, nonatomic) struct ASTextKitAttributes attributes; // @synthesize attributes=_attributes;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) vector_b5e32e34 visibleRanges;
- (_Bool)isTruncated;
- (unsigned long long)lineCount;
- (void)drawInContext:(struct CGContext *)arg1 bounds:(struct CGRect)arg2;
- (_Bool)canUseFastPath;
- (_Bool)usesExclusionPaths;
- (_Bool)usesCustomTruncation;
- (_Bool)isScaled;
- (void)_calculateSize;
- (struct CGSize)size;
- (id)stringDrawingContext;
- (id)initWithTextKitAttributes:(const struct ASTextKitAttributes *)arg1 constrainedSize:(struct CGSize)arg2;
@property(readonly, nonatomic) struct _NSRange firstVisibleRange;
- (struct CGRect)frameForTextRange:(struct _NSRange)arg1;
- (struct CGRect)trailingRect;
- (void)enumerateTextIndexesAtPosition:(struct CGPoint)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (struct CGRect)_internalRectForGlyphAtIndex:(unsigned long long)arg1 measureOption:(unsigned long long)arg2 layoutManager:(id)arg3 textContainer:(id)arg4 textStorage:(id)arg5;
- (unsigned long long)nearestTextIndexAtPosition:(struct CGPoint)arg1;
- (id)unlockedRectsForTextRange:(struct _NSRange)arg1 measureOptions:(unsigned long long)arg2 layoutManager:(id)arg3 textStorage:(id)arg4 textContainer:(id)arg5;
- (id)rectsForTextRange:(struct _NSRange)arg1 measureOption:(unsigned long long)arg2;
- (id)textCheckingResultAtPoint:(struct CGPoint)arg1;

@end

@interface ASTextKitTextCheckingResult : NSTextCheckingResult
{
    struct _NSRange _rangeOverride;
    unsigned long long _resultTypeOverride;
    ASTextKitEntityAttribute *_entityAttribute;
}

@property(readonly, nonatomic) ASTextKitEntityAttribute *entityAttribute; // @synthesize entityAttribute=_entityAttribute;
- (void).cxx_destruct;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithType:(unsigned long long)arg1 entityAttribute:(id)arg2 range:(struct _NSRange)arg3;

@end

@interface ASTextKitShadower : NSObject
{
    struct UIEdgeInsets _calculatedShadowPadding;
    UIColor *_shadowColor;
    double _shadowOpacity;
    double _shadowRadius;
    struct CGSize _shadowOffset;
}

+ (id)shadowerWithShadowOffset:(struct CGSize)arg1 shadowColor:(id)arg2 shadowOpacity:(double)arg3 shadowRadius:(double)arg4;
@property(readonly, nonatomic) double shadowRadius; // @synthesize shadowRadius=_shadowRadius;
@property(readonly, nonatomic) double shadowOpacity; // @synthesize shadowOpacity=_shadowOpacity;
@property(readonly, copy, nonatomic) UIColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property(readonly, nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset=_shadowOffset;
- (void).cxx_destruct;
- (struct CGPoint)offsetPointWithExternalPoint:(struct CGPoint)arg1;
- (struct CGPoint)offsetPointWithInternalPoint:(struct CGPoint)arg1;
- (struct CGRect)offsetRectWithInternalRect:(struct CGRect)arg1;
- (struct CGRect)outsetRectWithInsetRect:(struct CGRect)arg1;
- (struct CGSize)outsetSizeWithInsetSize:(struct CGSize)arg1;
- (struct CGRect)insetRectWithConstrainedRect:(struct CGRect)arg1;
- (struct CGSize)insetSizeWithConstrainedSize:(struct CGSize)arg1;
- (struct UIEdgeInsets)shadowPadding;
- (void)setShadowInContext:(struct CGContext *)arg1;
- (_Bool)_shouldDrawShadow;
- (id)initWithShadowOffset:(struct CGSize)arg1 shadowColor:(id)arg2 shadowOpacity:(double)arg3 shadowRadius:(double)arg4;

@end

@interface ASTextKitTailTruncater : NSObject <ASTextKitTruncating>
{
    ASTextKitContext *_context;
    NSAttributedString *_truncationAttributedString;
    NSCharacterSet *_avoidTailTruncationSet;
    vector_b5e32e34 _visibleRanges;
}

@property(readonly, nonatomic) vector_b5e32e34 visibleRanges; // @synthesize visibleRanges=_visibleRanges;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) struct _NSRange firstVisibleRange;
- (void)truncate;
- (unsigned long long)_findTruncationInsertionPointAtOrBeforeCharacterIndex:(unsigned long long)arg1 layoutManager:(id)arg2 textStorage:(id)arg3;
- (unsigned long long)_calculateCharacterIndexBeforeTruncationMessage:(id)arg1 textStorage:(id)arg2 textContainer:(id)arg3;
- (id)initWithContext:(id)arg1 truncationAttributedString:(id)arg2 avoidTailTruncationSet:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ASTextLinePositionSimpleModifier : NSObject <ASTextLinePositionModifier>
{
    double _fixedLineHeight;
}

@property double fixedLineHeight; // @synthesize fixedLineHeight=_fixedLineHeight;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)modifyLines:(id)arg1 fromText:(id)arg2 inContainer:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ASTextContainer : NSObject <NSCoding, NSCopying>
{
    _Bool _readonly;
    NSObject<OS_dispatch_semaphore> *_lock;
    struct CGSize _size;
    struct UIEdgeInsets _insets;
    UIBezierPath *_path;
    NSArray *_exclusionPaths;
    _Bool _pathFillEvenOdd;
    double _pathLineWidth;
    _Bool _verticalForm;
    unsigned long long _maximumNumberOfRows;
    unsigned long long _truncationType;
    NSAttributedString *_truncationToken;
    id <ASTextLinePositionModifier> _linePositionModifier;
}

+ (id)containerWithPath:(id)arg1;
+ (id)containerWithSize:(struct CGSize)arg1 insets:(struct UIEdgeInsets)arg2;
+ (id)containerWithSize:(struct CGSize)arg1;
- (void).cxx_destruct;
@property(copy) id <ASTextLinePositionModifier> linePositionModifier;
@property(copy) NSAttributedString *truncationToken;
@property unsigned long long truncationType;
@property unsigned long long maximumNumberOfRows;
@property(getter=isVerticalForm) _Bool verticalForm;
@property double pathLineWidth;
@property(getter=isPathFillEvenOdd) _Bool pathFillEvenOdd;
@property(copy) NSArray *exclusionPaths;
@property(copy) UIBezierPath *path;
@property struct UIEdgeInsets insets;
@property struct CGSize size;
- (void)makeImmutable;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyForced:(_Bool)arg1;
- (id)init;
- (id)description;

@end

@interface ASTextLayout : NSObject <NSCopying>
{
    _Bool _containsHighlight;
    _Bool _needDrawBlockBorder;
    _Bool _needDrawBackgroundBorder;
    _Bool _needDrawShadow;
    _Bool _needDrawUnderline;
    _Bool _needDrawText;
    _Bool _needDrawAttachment;
    _Bool _needDrawInnerShadow;
    _Bool _needDrawStrikethrough;
    _Bool _needDrawBorder;
    ASTextContainer *_container;
    NSAttributedString *_text;
    struct __CTFrame *_frame;
    NSArray *_lines;
    ASTextLine *_truncatedLine;
    NSArray *_attachments;
    NSArray *_attachmentRanges;
    NSArray *_attachmentRects;
    NSSet *_attachmentContentsSet;
    unsigned long long _rowCount;
    unsigned long long *_lineRowsIndex;
    CDStruct_c3b9c2ee *_lineRowsEdge;
    struct _NSRange _range;
    struct _NSRange _visibleRange;
    struct CGSize _textBoundingSize;
    struct CGRect _textBoundingRect;
}

+ (id)layoutWithContainers:(id)arg1 text:(id)arg2 range:(struct _NSRange)arg3;
+ (id)layoutWithContainers:(id)arg1 text:(id)arg2;
+ (id)layoutWithContainer:(id)arg1 text:(id)arg2 range:(struct _NSRange)arg3;
+ (id)layoutWithContainer:(id)arg1 text:(id)arg2;
+ (id)layoutWithContainerSize:(struct CGSize)arg1 text:(id)arg2;
@property(nonatomic) CDStruct_c3b9c2ee *lineRowsEdge; // @synthesize lineRowsEdge=_lineRowsEdge;
@property(nonatomic) unsigned long long *lineRowsIndex; // @synthesize lineRowsIndex=_lineRowsIndex;
@property(nonatomic) _Bool needDrawBorder; // @synthesize needDrawBorder=_needDrawBorder;
@property(nonatomic) _Bool needDrawStrikethrough; // @synthesize needDrawStrikethrough=_needDrawStrikethrough;
@property(nonatomic) _Bool needDrawInnerShadow; // @synthesize needDrawInnerShadow=_needDrawInnerShadow;
@property(nonatomic) _Bool needDrawAttachment; // @synthesize needDrawAttachment=_needDrawAttachment;
@property(nonatomic) _Bool needDrawText; // @synthesize needDrawText=_needDrawText;
@property(nonatomic) _Bool needDrawUnderline; // @synthesize needDrawUnderline=_needDrawUnderline;
@property(nonatomic) _Bool needDrawShadow; // @synthesize needDrawShadow=_needDrawShadow;
@property(nonatomic) _Bool needDrawBackgroundBorder; // @synthesize needDrawBackgroundBorder=_needDrawBackgroundBorder;
@property(nonatomic) _Bool needDrawBlockBorder; // @synthesize needDrawBlockBorder=_needDrawBlockBorder;
@property(nonatomic) _Bool containsHighlight; // @synthesize containsHighlight=_containsHighlight;
@property(nonatomic) struct CGSize textBoundingSize; // @synthesize textBoundingSize=_textBoundingSize;
@property(nonatomic) struct CGRect textBoundingRect; // @synthesize textBoundingRect=_textBoundingRect;
@property(nonatomic) struct _NSRange visibleRange; // @synthesize visibleRange=_visibleRange;
@property(nonatomic) unsigned long long rowCount; // @synthesize rowCount=_rowCount;
@property(retain, nonatomic) NSSet *attachmentContentsSet; // @synthesize attachmentContentsSet=_attachmentContentsSet;
@property(retain, nonatomic) NSArray *attachmentRects; // @synthesize attachmentRects=_attachmentRects;
@property(retain, nonatomic) NSArray *attachmentRanges; // @synthesize attachmentRanges=_attachmentRanges;
@property(retain, nonatomic) NSArray *attachments; // @synthesize attachments=_attachments;
@property(retain, nonatomic) ASTextLine *truncatedLine; // @synthesize truncatedLine=_truncatedLine;
@property(retain, nonatomic) NSArray *lines; // @synthesize lines=_lines;
@property(nonatomic) struct __CTFrame *frame; // @synthesize frame=_frame;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
@property(retain, nonatomic) NSAttributedString *text; // @synthesize text=_text;
@property(retain, nonatomic) ASTextContainer *container; // @synthesize container=_container;
- (void).cxx_destruct;
- (void)drawInContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 debug:(id)arg3;
- (void)drawInContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 point:(struct CGPoint)arg3 view:(id)arg4 layer:(id)arg5 debug:(id)arg6 cancel:(CDUnknownBlockType)arg7;
- (id)selectionRectsWithOnlyStartAndEndForRange:(id)arg1;
- (id)selectionRectsWithoutStartAndEndForRange:(id)arg1;
- (id)selectionRectsForRange:(id)arg1;
- (struct CGRect)rectForRange:(id)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (struct CGRect)caretRectForPosition:(id)arg1;
- (struct CGPoint)linePositionForPosition:(id)arg1;
- (unsigned long long)lineIndexForPosition:(id)arg1;
- (id)textRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)textRangeByExtendingPosition:(id)arg1;
- (id)closestTextRangeAtPoint:(struct CGPoint)arg1;
- (id)textRangeAtPoint:(struct CGPoint)arg1;
- (id)positionForPoint:(struct CGPoint)arg1 oldPosition:(id)arg2 otherPosition:(id)arg3;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
- (unsigned long long)textPositionForPoint:(struct CGPoint)arg1 lineIndex:(unsigned long long)arg2;
- (double)offsetForTextPosition:(unsigned long long)arg1 lineIndex:(unsigned long long)arg2;
- (unsigned long long)closestLineIndexForPoint:(struct CGPoint)arg1;
- (unsigned long long)lineIndexForPoint:(struct CGPoint)arg1;
- (unsigned long long)rowIndexForLine:(unsigned long long)arg1;
- (unsigned long long)lineCountForRow:(unsigned long long)arg1;
- (unsigned long long)lineIndexForRow:(unsigned long long)arg1;
- (id)_correctedRangeWithEdge:(id)arg1;
- (_Bool)_isRightToLeftInLine:(id)arg1 atPoint:(struct CGPoint)arg2;
- (_Bool)_insideEmoji:(id)arg1 position:(unsigned long long)arg2 block:(CDUnknownBlockType)arg3;
- (_Bool)_insideComposedCharacterSequences:(id)arg1 position:(unsigned long long)arg2 block:(CDUnknownBlockType)arg3;
- (struct __CTRun *)_runForLine:(id)arg1 position:(id)arg2;
- (unsigned long long)_closestRowIndexForEdge:(double)arg1;
- (unsigned long long)_rowIndexForEdge:(double)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)description;
- (id)_init;

@end

@interface ASTextLine : NSObject
{
    double _firstGlyphPos;
    _Bool _vertical;
    unsigned long long _index;
    unsigned long long _row;
    NSArray *_verticalRotateRange;
    const struct __CTLine *_CTLine;
    double _ascent;
    double _descent;
    double _leading;
    double _lineWidth;
    double _trailingWhitespaceWidth;
    NSArray *_attachments;
    NSArray *_attachmentRanges;
    NSArray *_attachmentRects;
    struct _NSRange _range;
    struct CGPoint _position;
    struct CGRect _bounds;
}

+ (id)lineWithCTLine:(struct __CTLine *)arg1 position:(struct CGPoint)arg2 vertical:(_Bool)arg3;
@property(readonly, nonatomic) NSArray *attachmentRects; // @synthesize attachmentRects=_attachmentRects;
@property(readonly, nonatomic) NSArray *attachmentRanges; // @synthesize attachmentRanges=_attachmentRanges;
@property(readonly, nonatomic) NSArray *attachments; // @synthesize attachments=_attachments;
@property(readonly, nonatomic) double trailingWhitespaceWidth; // @synthesize trailingWhitespaceWidth=_trailingWhitespaceWidth;
@property(readonly, nonatomic) double lineWidth; // @synthesize lineWidth=_lineWidth;
@property(readonly, nonatomic) double leading; // @synthesize leading=_leading;
@property(readonly, nonatomic) double descent; // @synthesize descent=_descent;
@property(readonly, nonatomic) double ascent; // @synthesize ascent=_ascent;
@property(nonatomic) struct CGPoint position; // @synthesize position=_position;
@property(readonly, nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
@property(readonly, nonatomic) _Bool vertical; // @synthesize vertical=_vertical;
@property(readonly, nonatomic) struct _NSRange range; // @synthesize range=_range;
@property(readonly, nonatomic) const struct __CTLine *CTLine; // @synthesize CTLine=_CTLine;
@property(retain, nonatomic) NSArray *verticalRotateRange; // @synthesize verticalRotateRange=_verticalRotateRange;
@property(nonatomic) unsigned long long row; // @synthesize row=_row;
@property(nonatomic) unsigned long long index; // @synthesize index=_index;
- (void).cxx_destruct;
- (id)description;
@property(readonly, nonatomic) double right;
@property(readonly, nonatomic) double left;
@property(readonly, nonatomic) double bottom;
@property(readonly, nonatomic) double top;
@property(readonly, nonatomic) double height;
@property(readonly, nonatomic) double width;
@property(readonly, nonatomic) struct CGSize size;
- (void)reloadBounds;
- (void)setCTLine:(const struct __CTLine *)arg1;
- (void)dealloc;

@end

@interface ASTextRunGlyphRange : NSObject
{
    unsigned long long _drawMode;
    struct _NSRange _glyphRangeInRun;
}

+ (id)rangeWithRange:(struct _NSRange)arg1 drawMode:(unsigned long long)arg2;
@property(nonatomic) unsigned long long drawMode; // @synthesize drawMode=_drawMode;
@property(nonatomic) struct _NSRange glyphRangeInRun; // @synthesize glyphRangeInRun=_glyphRangeInRun;

@end

@interface ASTextNodeRendererKey : NSObject
{
    struct mutex _m;
    struct CGSize _constrainedSize;
    struct ASTextKitAttributes _attributes;
}

@property(nonatomic) struct CGSize constrainedSize; // @synthesize constrainedSize=_constrainedSize;
@property(nonatomic) struct ASTextKitAttributes attributes; // @synthesize attributes=_attributes;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

@interface ASTextNodeDrawParameter : NSObject
{
    struct ASTextKitAttributes _rendererAttributes;
    UIColor *_backgroundColor;
    struct UIEdgeInsets _textContainerInsets;
    double _contentScale;
    _Bool _opaque;
    struct CGRect _bounds;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)rendererForBounds:(struct CGRect)arg1;
- (id)initWithRendererAttributes:(struct ASTextKitAttributes)arg1 backgroundColor:(id)arg2 textContainerInsets:(struct UIEdgeInsets)arg3 contentScale:(double)arg4 opaque:(_Bool)arg5 bounds:(struct CGRect)arg6;

@end

@interface ASTextNode : ASControlNode <UIGestureRecognizerDelegate>
{
    struct CGSize _shadowOffset;
    struct CGColor *_shadowColor;
    UIColor *_cachedShadowUIColor;
    UIColor *_placeholderColor;
    double _shadowOpacity;
    double _shadowRadius;
    struct UIEdgeInsets _textContainerInset;
    NSArray *_exclusionPaths;
    NSAttributedString *_attributedText;
    NSAttributedString *_truncationAttributedText;
    NSAttributedString *_additionalTruncationMessage;
    NSAttributedString *_composedTruncationText;
    NSArray *_pointSizeScaleFactors;
    long long _truncationMode;
    unsigned long long _maximumNumberOfLines;
    NSString *_highlightedLinkAttributeName;
    id _highlightedLinkAttributeValue;
    unsigned long long _highlightStyle;
    struct _NSRange _highlightRange;
    ASHighlightOverlayLayer *_activeHighlightLayer;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    _Bool _longPressCancelsTouches;
    _Bool _passthroughNonlinkTouches;
    _Bool _usingExperiment;
    NSArray *_linkAttributeNames;
    id <ASTextNodeDelegate> _delegate;
    struct UIEdgeInsets _placeholderInsets;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
+ (double)_highlightOpacityForStyle:(unsigned long long)arg1;
+ (struct CGColor *)_highlightColorForStyle:(unsigned long long)arg1;
+ (id)displayWithParameters:(id)arg1 isCancelled:(CDUnknownBlockType)arg2;
+ (double)ascenderWithAttributedString:(id)arg1;
@property(readonly) _Bool usingExperiment; // @synthesize usingExperiment=_usingExperiment;
@property(nonatomic) _Bool passthroughNonlinkTouches; // @synthesize passthroughNonlinkTouches=_passthroughNonlinkTouches;
@property(nonatomic) _Bool longPressCancelsTouches; // @synthesize longPressCancelsTouches=_longPressCancelsTouches;
@property __weak id <ASTextNodeDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy) NSArray *linkAttributeNames; // @synthesize linkAttributeNames=_linkAttributeNames;
@property struct UIEdgeInsets placeholderInsets; // @synthesize placeholderInsets=_placeholderInsets;
- (void).cxx_destruct;
- (id)_locked_prepareTruncationStringForDrawing:(id)arg1;
- (id)_locked_composedTruncationText;
- (struct _NSRange)_additionalTruncationMessageRangeWithVisibleRange:(struct _NSRange)arg1;
- (void)_locked_invalidateTruncationText;
- (void)_invalidateTruncationText;
@property(readonly) unsigned long long lineCount;
@property unsigned long long maximumNumberOfLines;
@property(copy, nonatomic) NSArray *pointSizeScaleFactors;
- (_Bool)shouldTruncateForConstrainedSize:(CDStruct_42a63532)arg1;
@property(readonly, getter=isTruncated) _Bool truncated;
@property long long truncationMode;
@property(copy) NSAttributedString *additionalTruncationMessage;
@property(copy) NSAttributedString *truncationAttributedText;
@property(readonly) struct UIEdgeInsets shadowPadding;
- (void)setShadowRadius:(double)arg1;
- (double)shadowRadius;
- (void)setShadowOpacity:(double)arg1;
- (double)shadowOpacity;
- (void)setShadowOffset:(struct CGSize)arg1;
- (struct CGSize)shadowOffset;
- (void)setShadowColor:(struct CGColor *)arg1;
- (struct CGColor *)shadowColor;
- (_Bool)_pendingTruncationTap;
- (_Bool)_pendingLinkTap;
- (void)_handleLongPress:(id)arg1;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)placeholderImage;
@property(copy) UIColor *placeholderColor;
- (struct CGRect)frameForTextRange:(struct _NSRange)arg1;
- (struct CGRect)trailingRect;
- (id)_rectsForTextRange:(struct _NSRange)arg1 measureOption:(unsigned long long)arg2;
- (id)highlightRectsForTextRange:(struct _NSRange)arg1;
- (id)rectsForTextRange:(struct _NSRange)arg1;
- (void)_clearHighlightIfNecessary;
- (void)_setHighlightRange:(struct _NSRange)arg1 forAttributeName:(id)arg2 value:(id)arg3 animated:(_Bool)arg4;
- (void)setHighlightRange:(struct _NSRange)arg1 animated:(_Bool)arg2;
@property struct _NSRange highlightRange;
@property unsigned long long highlightStyle;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)_linkAttributeValueAtPoint:(struct CGPoint)arg1 attributeName:(out id *)arg2 range:(out struct _NSRange *)arg3 inAdditionalTruncationMessage:(out _Bool *)arg4 forHighlighting:(_Bool)arg5;
- (id)linkAttributeValueAtPoint:(struct CGPoint)arg1 attributeName:(out id *)arg2 range:(out struct _NSRange *)arg3;
- (id)drawParametersForAsyncLayer:(id)arg1;
@property(copy) NSArray *exclusionPaths;
@property(copy) NSAttributedString *attributedText;
- (struct CGSize)calculateSizeThatFits:(struct CGSize)arg1;
@property(nonatomic) struct UIEdgeInsets textContainerInset;
- (unsigned long long)defaultAccessibilityTraits;
- (id)defaultAccessibilityLabel;
- (struct ASTextKitAttributes)_locked_rendererAttributes;
- (id)_locked_rendererWithBounds:(struct CGRect)arg1;
- (id)_locked_renderer;
- (id)_rendererWithBounds:(struct CGRect)arg1;
- (id)_renderer;
- (_Bool)supportsLayerBacking;
- (void)didLoad;
- (id)propertiesForDebugDescription;
- (id)propertiesForDescription;
- (id)_plainStringForDescription;
- (void)dealloc;
- (id)init;
@property(retain, nonatomic) id textContainerLinePositionModifier;
@property(copy) NSAttributedString *truncationAttributedString;
@property(copy) NSAttributedString *attributedString;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property _Bool placeholderEnabled; // @dynamic placeholderEnabled;
@property(readonly) Class superclass;

@end

@interface ASTextCacheValue : NSObject
{
    // Error parsing type: {Mutex="_type"i""(?="_unfair"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_runfair"{?="_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"_thread"A^{_opaque_pthread_t}"_count"i}"_plain"{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}"_recursive"{recursive_mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}})"_owner"{__thread_id="__id_"^{_opaque_pthread_t}}"_count"i}, name: _m
    struct deque<std::__1::tuple<CGSize, ASTextLayout *>, std::__1::allocator<std::__1::tuple<CGSize, ASTextLayout *>>> _layouts;
}

- (id).cxx_construct;
- (void).cxx_destruct;

@end

@interface ASTextNode2 : ASControlNode <UIGestureRecognizerDelegate>
{
    ASTextContainer *_textContainer;
    struct CGSize _shadowOffset;
    struct CGColor *_shadowColor;
    double _shadowOpacity;
    double _shadowRadius;
    NSAttributedString *_attributedText;
    NSAttributedString *_truncationAttributedText;
    NSAttributedString *_additionalTruncationMessage;
    NSAttributedString *_composedTruncationText;
    NSArray *_pointSizeScaleFactors;
    long long _truncationMode;
    NSString *_highlightedLinkAttributeName;
    id _highlightedLinkAttributeValue;
    unsigned long long _highlightStyle;
    struct _NSRange _highlightRange;
    ASHighlightOverlayLayer *_activeHighlightLayer;
    UIColor *_placeholderColor;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    _Bool _longPressCancelsTouches;
    _Bool _passthroughNonlinkTouches;
    NSArray *_linkAttributeNames;
    id <ASTextNodeDelegate> _delegate;
    struct UIEdgeInsets _placeholderInsets;
}

+ (void)enableDebugging;
+ (double)_highlightOpacityForStyle:(unsigned long long)arg1;
+ (struct CGColor *)_highlightColorForStyle:(unsigned long long)arg1;
+ (void)drawRect:(struct CGRect)arg1 withParameters:(id)arg2 isCancelled:(CDUnknownBlockType)arg3 isRasterizing:(_Bool)arg4;
+ (double)ascenderWithAttributedString:(id)arg1;
@property(nonatomic) _Bool passthroughNonlinkTouches; // @synthesize passthroughNonlinkTouches=_passthroughNonlinkTouches;
@property(nonatomic) _Bool longPressCancelsTouches; // @synthesize longPressCancelsTouches=_longPressCancelsTouches;
@property __weak id <ASTextNodeDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSArray *linkAttributeNames; // @synthesize linkAttributeNames=_linkAttributeNames;
@property struct UIEdgeInsets placeholderInsets; // @synthesize placeholderInsets=_placeholderInsets;
- (void).cxx_destruct;
- (_Bool)usingExperiment;
- (id)_locked_prepareTruncationStringForDrawing:(id)arg1;
- (id)_locked_composedTruncationText;
- (struct _NSRange)_additionalTruncationMessageRangeWithVisibleRange:(struct _NSRange)arg1;
- (void)_locked_invalidateTruncationText;
- (void)_invalidateTruncationText;
@property(readonly) unsigned long long lineCount;
@property unsigned long long maximumNumberOfLines;
- (id)locked_textLayoutForSize:(struct CGSize)arg1;
- (_Bool)shouldTruncateForConstrainedSize:(CDStruct_42a63532)arg1;
@property(readonly, getter=isTruncated) _Bool truncated;
@property long long truncationMode;
@property(copy) NSAttributedString *additionalTruncationMessage;
@property(copy) NSAttributedString *truncationAttributedText;
- (void)_ensureTruncationText;
- (id)pointSizeScaleFactors;
- (void)setPointSizeScaleFactors:(id)arg1;
@property(readonly, nonatomic) struct UIEdgeInsets shadowPadding;
- (void)setShadowRadius:(double)arg1;
- (double)shadowRadius;
- (void)setShadowOpacity:(double)arg1;
- (double)shadowOpacity;
- (void)setShadowOffset:(struct CGSize)arg1;
- (struct CGSize)shadowOffset;
- (void)setShadowColor:(struct CGColor *)arg1;
- (struct CGColor *)shadowColor;
- (_Bool)_pendingTruncationTap;
- (_Bool)_pendingLinkTap;
- (void)_handleLongPress:(id)arg1;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)placeholderImage;
@property(copy) UIColor *placeholderColor;
- (struct CGRect)frameForTextRange:(struct _NSRange)arg1;
- (struct CGRect)trailingRect;
- (id)highlightRectsForTextRange:(struct _NSRange)arg1;
- (id)rectsForTextRange:(struct _NSRange)arg1;
- (void)_clearHighlightIfNecessary;
- (void)_setHighlightRange:(struct _NSRange)arg1 forAttributeName:(id)arg2 value:(id)arg3 animated:(_Bool)arg4;
- (void)setHighlightRange:(struct _NSRange)arg1 animated:(_Bool)arg2;
@property(nonatomic) struct _NSRange highlightRange;
@property(nonatomic) unsigned long long highlightStyle;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)_locked_pointInsideAdditionalTruncationMessage:(struct CGPoint)arg1 withLayout:(id)arg2;
- (id)_linkAttributeValueAtPoint:(struct CGPoint)arg1 attributeName:(out id *)arg2 range:(out struct _NSRange *)arg3 inAdditionalTruncationMessage:(out _Bool *)arg4 forHighlighting:(_Bool)arg5;
- (id)linkAttributeValueAtPoint:(struct CGPoint)arg1 attributeName:(out id *)arg2 range:(out struct _NSRange *)arg3;
- (id)drawParametersForAsyncLayer:(id)arg1;
- (void)prepareAttributedString:(id)arg1 isForIntrinsicSize:(_Bool)arg2;
@property(copy) NSArray *exclusionPaths;
@property(copy) NSAttributedString *attributedText;
- (struct CGSize)calculateSizeThatFits:(struct CGSize)arg1;
@property(retain, nonatomic) id <ASTextLinePositionModifier> textContainerLinePositionModifier;
- (struct UIEdgeInsets)textContainerInset;
- (void)setTextContainerInset:(struct UIEdgeInsets)arg1;
- (unsigned long long)defaultAccessibilityTraits;
- (id)defaultAccessibilityLabel;
- (_Bool)supportsLayerBacking;
- (void)didLoad;
- (id)propertiesForDebugDescription;
- (id)propertiesForDescription;
- (id)_plainStringForDescription;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property _Bool placeholderEnabled; // @dynamic placeholderEnabled;
@property(readonly) Class superclass;

@end

@interface ASTextNodeWordKerner : NSObject <NSLayoutManagerDelegate>
{
}

- (double)_wordKernedSpaceWidthForCharacterAtIndex:(unsigned long long)arg1 atGlyphPosition:(struct CGPoint)arg2 forTextContainer:(id)arg3 layoutManager:(id)arg4;
- (struct CGRect)layoutManager:(id)arg1 boundingBoxForControlGlyphAtIndex:(unsigned long long)arg2 forTextContainer:(id)arg3 proposedLineFragment:(struct CGRect)arg4 glyphPosition:(struct CGPoint)arg5 characterIndex:(unsigned long long)arg6;
- (long long)layoutManager:(id)arg1 shouldUseAction:(long long)arg2 forControlCharacterAtIndex:(unsigned long long)arg3;
- (unsigned long long)layoutManager:(id)arg1 shouldGenerateGlyphs:(const unsigned short *)arg2 properties:(const long long *)arg3 characterIndexes:(const unsigned long long *)arg4 font:(id)arg5 forGlyphRange:(struct _NSRange)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ASTextRunDelegate : NSObject <NSCopying, NSCoding>
{
    NSDictionary *_userInfo;
    double _ascent;
    double _descent;
    double _width;
}

@property(nonatomic) double width; // @synthesize width=_width;
@property(nonatomic) double descent; // @synthesize descent=_descent;
@property(nonatomic) double ascent; // @synthesize ascent=_ascent;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (const struct __CTRunDelegate *)CTRunDelegate;

@end

@interface ASTraceEvent : NSObject
{
    NSArray *_backtrace;
    NSString *_message;
    double _timestamp;
    NSString *_objectDescription;
    NSString *_threadDescription;
}

@property(readonly, nonatomic) NSString *threadDescription; // @synthesize threadDescription=_threadDescription;
@property(readonly, nonatomic) NSString *objectDescription; // @synthesize objectDescription=_objectDescription;
@property(readonly, nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) NSString *message; // @synthesize message=_message;
@property(readonly, nonatomic) NSArray *backtrace; // @synthesize backtrace=_backtrace;
- (void).cxx_destruct;
- (id)description;
- (id)initWithBacktrace:(id)arg1 format:(id)arg2 arguments:(char *)arg3;

@end

@interface ASTraitCollection : NSObject
{
    CDStruct_104667ad _prim;
    long long _userInterfaceIdiom;
}

+ (id)traitCollectionWithASPrimitiveTraitCollection:(CDStruct_104667ad)arg1;
@property(readonly) long long userInterfaceIdiom; // @synthesize userInterfaceIdiom=_userInterfaceIdiom;
- (_Bool)isEqualToTraitCollection:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
@property(readonly) NSString *preferredContentSizeCategory;
@property(readonly) long long userInterfaceStyle;
@property(readonly) struct CGSize containerSize;
@property(readonly) long long layoutDirection;
@property(readonly) long long forceTouchCapability;
@property(readonly) long long displayGamut;
@property(readonly) double displayScale;
@property(readonly) long long verticalSizeClass;
@property(readonly) long long horizontalSizeClass;
- (CDStruct_104667ad)primitiveTraitCollection;

@end

@interface ASWeakMapEntry : NSObject
{
    id _value;
    id _key;
}

@property(readonly, nonatomic) id key; // @synthesize key=_key;
@property(retain) id value; // @synthesize value=_value;
- (void).cxx_destruct;
- (id)initWithKey:(id)arg1 value:(id)arg2;

@end

@interface ASWeakMap : NSObject
{
    NSMapTable *_hashTable;
}

@property(readonly, nonatomic) NSMapTable *hashTable; // @synthesize hashTable=_hashTable;
- (void).cxx_destruct;
- (id)setObject:(id)arg1 forKey:(id)arg2;
- (id)entryForKey:(id)arg1;
- (id)init;

@end

@interface ASWeakProxy : NSProxy
{
    id _target;
}

+ (id)weakProxyWithTarget:(id)arg1;
@property(readonly, nonatomic) __weak id target; // @synthesize target=_target;
- (void).cxx_destruct;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)description;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)conformsToProtocol:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)initWithTarget:(id)arg1;

@end

@interface ASWeakSet : NSObject <NSFastEnumeration>
{
    NSHashTable *_hashTable;
}

@property(readonly, nonatomic) NSHashTable *hashTable; // @synthesize hashTable=_hashTable;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@property(readonly, nonatomic) unsigned long long count;
@property(readonly, nonatomic, getter=isEmpty) _Bool empty;
- (_Bool)containsObject:(id)arg1;
- (id)allObjects;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (id)init;

@end

@interface NSAttributedString_ASText : NSObject
{
}

@end

@interface NSParagraphStyle_ASText : NSObject
{
}

@end

@interface ASAsyncTransactionOperation : NSObject
{
    CDUnknownBlockType _operationCompletionBlock;
    id _value;
}

@property(retain) id value; // @synthesize value=_value;
@property(copy, nonatomic) CDUnknownBlockType operationCompletionBlock; // @synthesize operationCompletionBlock=_operationCompletionBlock;
- (void).cxx_destruct;
- (id)description;
- (void)callAndReleaseCompletionBlock:(_Bool)arg1;
- (void)dealloc;
- (id)initWithOperationCompletionBlock:(CDUnknownBlockType)arg1;

@end

@interface _ASAsyncTransaction : NSObject
{
    struct Group *_group;
    NSMutableArray *_operations;
    CDUnknownBlockType _completionBlock;
    unsigned long long _state;
}

@property unsigned long long state; // @synthesize state=_state;
@property(readonly) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
- (void).cxx_destruct;
- (id)description;
- (void)_ensureTransactionData;
- (void)waitUntilComplete;
- (void)completeTransaction;
- (void)commit;
- (void)cancel;
- (void)addOperationWithBlock:(CDUnknownBlockType)arg1 priority:(long long)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)initWithCompletionBlock:(CDUnknownBlockType)arg1;

@end

@interface _ASAsyncTransactionGroup : NSObject
{
    NSHashTable *_containers;
}

+ (id)mainTransactionGroup;
- (void).cxx_destruct;
- (void)commit;
- (void)addTransactionContainer:(id)arg1;
- (id)_init;
- (void)registerAsMainRunloopObserver;

@end

@interface _ASCollectionGalleryLayoutInfo : NSObject
{
    double _minimumLineSpacing;
    double _minimumInteritemSpacing;
    struct CGSize _itemSize;
    struct UIEdgeInsets _sectionInset;
}

@property(readonly, nonatomic) struct UIEdgeInsets sectionInset; // @synthesize sectionInset=_sectionInset;
@property(readonly, nonatomic) double minimumInteritemSpacing; // @synthesize minimumInteritemSpacing=_minimumInteritemSpacing;
@property(readonly, nonatomic) double minimumLineSpacing; // @synthesize minimumLineSpacing=_minimumLineSpacing;
@property(readonly, nonatomic) struct CGSize itemSize; // @synthesize itemSize=_itemSize;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToInfo:(id)arg1;
- (id)initWithItemSize:(struct CGSize)arg1 minimumLineSpacing:(double)arg2 minimumInteritemSpacing:(double)arg3 sectionInset:(struct UIEdgeInsets)arg4;

@end

@interface _ASDisplayLayer : CALayer
{
    _Bool _attemptedDisplayWhileZeroSized;
    struct {
        unsigned int delegateDidChangeBounds:1;
    } _delegateFlags;
    _Bool _displaySuspended;
    ASDisplayNode *_asyncdisplaykit_node;
    id <_ASDisplayLayerDelegate> _asyncDelegate;
}

+ (id)defaultValueForKey:(id)arg1;
+ (id)displayQueue;
@property(nonatomic, getter=isDisplaySuspended) _Bool displaySuspended; // @synthesize displaySuspended=_displaySuspended;
@property __weak id <_ASDisplayLayerDelegate> asyncDelegate; // @synthesize asyncDelegate=_asyncDelegate;
@property(nonatomic) __weak ASDisplayNode *asyncdisplaykit_node; // @synthesize asyncdisplaykit_node=_asyncdisplaykit_node;
- (void).cxx_destruct;
- (id)description;
- (void)cancelAsyncDisplay;
- (void)display:(_Bool)arg1;
- (void)display;
- (void)_hackResetNeedsDisplay;
- (void)displayImmediately;
- (void)setNeedsDisplay;
- (void)layoutSublayers;
- (void)setBounds:(struct CGRect)arg1;
- (void)setDelegate:(id)arg1;

// Remaining properties
@property(nonatomic) _Bool displaysAsynchronously; // @dynamic displaysAsynchronously;

@end

@interface _ASDisplayView : UIView
{
    _Bool _inHitTest;
    _Bool _inPointInside;
    NSArray *_accessibilityElements;
    struct CGRect _lastAccessibilityElementsFrame;
    unsigned long long _methodOverrides;
    ASDisplayNode *_asyncdisplaykit_node;
    ASDisplayNode *_keepalive_node;
}

+ (Class)layerClass;
+ (void)initialize;
@property(retain, nonatomic) ASDisplayNode *keepalive_node; // @synthesize keepalive_node=_keepalive_node;
@property(nonatomic) __weak ASDisplayNode *asyncdisplaykit_node; // @synthesize asyncdisplaykit_node=_asyncdisplaykit_node;
- (void).cxx_destruct;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)safeAreaInsetsDidChange;
- (void)layoutMarginsDidChange;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)__isFirstResponder;
- (_Bool)isFirstResponder;
- (_Bool)__resignFirstResponder;
- (_Bool)resignFirstResponder;
- (_Bool)__canResignFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)__becomeFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)__canBecomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (void)tintColorDidChange;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)__forwardTouchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)__forwardTouchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)__forwardTouchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)__forwardTouchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)addGestureRecognizer:(id)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setContentMode:(long long)arg1;
- (long long)contentMode;
- (void)setNeedsDisplay;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)addSubview:(id)arg1;
- (void)insertSubview:(id)arg1 atIndex:(long long)arg2;
- (void)didMoveToSuperview;
- (void)willMoveToSuperview:(id)arg1;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
- (id)description;
- (void)_staticInitialize;
- (void)_initializeInstance;
- (id)init;
- (id)accessibilityElements;
- (void)setAccessibilityElements:(id)arg1;
- (void)accessibilityElementDidBecomeFocused;
- (_Bool)accessibilityPerformMagicTap;
- (_Bool)accessibilityPerformEscape;
- (_Bool)accessibilityScroll:(long long)arg1;
- (void)accessibilityDecrement;
- (void)accessibilityIncrement;
- (_Bool)accessibilityActivate;

@end

@interface ASAccessibilityElement : UIAccessibilityElement <ASAccessibilityElementPositioning>
{
    ASDisplayNode *_node;
    ASDisplayNode *_containerNode;
}

+ (id)accessibilityElementWithContainer:(id)arg1 node:(id)arg2 containerNode:(id)arg3;
@property(retain, nonatomic) ASDisplayNode *containerNode; // @synthesize containerNode=_containerNode;
@property(retain, nonatomic) ASDisplayNode *node; // @synthesize node=_node;
- (void).cxx_destruct;
@property(readonly, nonatomic) struct CGRect accessibilityFrame;

@end

@interface ASAccessibilityCustomAction : UIAccessibilityCustomAction <ASAccessibilityElementPositioning>
{
    UIView *_container;
    ASDisplayNode *_node;
    ASDisplayNode *_containerNode;
}

@property(retain, nonatomic) ASDisplayNode *containerNode; // @synthesize containerNode=_containerNode;
@property(retain, nonatomic) ASDisplayNode *node; // @synthesize node=_node;
@property(retain, nonatomic) UIView *container; // @synthesize container=_container;
- (void).cxx_destruct;
@property(readonly, nonatomic) struct CGRect accessibilityFrame;

@end

@interface _ASPendingState : NSObject <ASDisplayNodeViewProperties, ASDisplayProperties>
{
    unsigned long long autoresizingMask;
    unsigned int edgeAntialiasingMask;
    struct CGRect frame;
    struct CGRect bounds;
    struct CGColor *backgroundColor;
    double alpha;
    double cornerRadius;
    long long contentMode;
    struct CGPoint anchorPoint;
    struct CGPoint position;
    double zPosition;
    struct CATransform3D transform;
    struct CATransform3D sublayerTransform;
    id contents;
    NSString *contentsGravity;
    struct CGRect contentsRect;
    struct CGRect contentsCenter;
    double contentsScale;
    double rasterizationScale;
    struct CGColor *shadowColor;
    double shadowOpacity;
    struct CGSize shadowOffset;
    double shadowRadius;
    double borderWidth;
    struct CGColor *borderColor;
    _Bool asyncTransactionContainer;
    struct UIEdgeInsets layoutMargins;
    _Bool preservesSuperviewLayoutMargins;
    _Bool insetsLayoutMarginsFromSafeArea;
    _Bool isAccessibilityElement;
    NSString *accessibilityLabel;
    NSAttributedString *accessibilityAttributedLabel;
    NSString *accessibilityHint;
    NSAttributedString *accessibilityAttributedHint;
    NSString *accessibilityValue;
    NSAttributedString *accessibilityAttributedValue;
    unsigned long long accessibilityTraits;
    struct CGRect accessibilityFrame;
    NSString *accessibilityLanguage;
    _Bool accessibilityElementsHidden;
    _Bool accessibilityViewIsModal;
    _Bool shouldGroupAccessibilityChildren;
    NSString *accessibilityIdentifier;
    long long accessibilityNavigationStyle;
    NSArray *accessibilityHeaderElements;
    struct CGPoint accessibilityActivationPoint;
    UIBezierPath *accessibilityPath;
    long long semanticContentAttribute;
    NSArray *accessibilityCustomActions;
    struct {
        unsigned int needsDisplay:1;
        unsigned int needsLayout:1;
        unsigned int layoutIfNeeded:1;
        unsigned int setClipsToBounds:1;
        unsigned int setOpaque:1;
        unsigned int setNeedsDisplayOnBoundsChange:1;
        unsigned int setAutoresizesSubviews:1;
        unsigned int setAutoresizingMask:1;
        unsigned int setFrame:1;
        unsigned int setBounds:1;
        unsigned int setBackgroundColor:1;
        unsigned int setTintColor:1;
        unsigned int setHidden:1;
        unsigned int setAlpha:1;
        unsigned int setCornerRadius:1;
        unsigned int setContentMode:1;
        unsigned int setNeedsDisplay:1;
        unsigned int setAnchorPoint:1;
        unsigned int setPosition:1;
        unsigned int setZPosition:1;
        unsigned int setTransform:1;
        unsigned int setSublayerTransform:1;
        unsigned int setContents:1;
        unsigned int setContentsGravity:1;
        unsigned int setContentsRect:1;
        unsigned int setContentsCenter:1;
        unsigned int setContentsScale:1;
        unsigned int setRasterizationScale:1;
        unsigned int setUserInteractionEnabled:1;
        unsigned int setExclusiveTouch:1;
        unsigned int setShadowColor:1;
        unsigned int setShadowOpacity:1;
        unsigned int setShadowOffset:1;
        unsigned int setShadowRadius:1;
        unsigned int setBorderWidth:1;
        unsigned int setBorderColor:1;
        unsigned int setAsyncTransactionContainer:1;
        unsigned int setAllowsGroupOpacity:1;
        unsigned int setAllowsEdgeAntialiasing:1;
        unsigned int setEdgeAntialiasingMask:1;
        unsigned int setIsAccessibilityElement:1;
        unsigned int setAccessibilityLabel:1;
        unsigned int setAccessibilityAttributedLabel:1;
        unsigned int setAccessibilityHint:1;
        unsigned int setAccessibilityAttributedHint:1;
        unsigned int setAccessibilityValue:1;
        unsigned int setAccessibilityAttributedValue:1;
        unsigned int setAccessibilityTraits:1;
        unsigned int setAccessibilityFrame:1;
        unsigned int setAccessibilityLanguage:1;
        unsigned int setAccessibilityElementsHidden:1;
        unsigned int setAccessibilityViewIsModal:1;
        unsigned int setShouldGroupAccessibilityChildren:1;
        unsigned int setAccessibilityIdentifier:1;
        unsigned int setAccessibilityNavigationStyle:1;
        unsigned int setAccessibilityHeaderElements:1;
        unsigned int setAccessibilityActivationPoint:1;
        unsigned int setAccessibilityPath:1;
        unsigned int setSemanticContentAttribute:1;
        unsigned int setLayoutMargins:1;
        unsigned int setPreservesSuperviewLayoutMargins:1;
        unsigned int setInsetsLayoutMarginsFromSafeArea:1;
        unsigned int setAccessibilityCustomActions:1;
    } _flags;
    _Bool clipsToBounds;
    _Bool opaque;
    _Bool isHidden;
    _Bool needsDisplayOnBoundsChange;
    _Bool allowsGroupOpacity;
    _Bool allowsEdgeAntialiasing;
    _Bool autoresizesSubviews;
    _Bool userInteractionEnabled;
    _Bool exclusiveTouch;
    UIColor *tintColor;
}

+ (id)pendingViewStateFromView:(id)arg1;
+ (id)pendingViewStateFromLayer:(id)arg1;
@property(nonatomic) _Bool insetsLayoutMarginsFromSafeArea; // @synthesize insetsLayoutMarginsFromSafeArea;
@property(nonatomic) _Bool preservesSuperviewLayoutMargins; // @synthesize preservesSuperviewLayoutMargins;
@property(nonatomic) struct UIEdgeInsets layoutMargins; // @synthesize layoutMargins;
@property(nonatomic) long long semanticContentAttribute; // @synthesize semanticContentAttribute;
@property(nonatomic, getter=asyncdisplaykit_isAsyncTransactionContainer, setter=asyncdisplaykit_setAsyncTransactionContainer:) _Bool asyncdisplaykit_asyncTransactionContainer; // @synthesize asyncdisplaykit_asyncTransactionContainer=asyncTransactionContainer;
@property(nonatomic) struct CGColor *borderColor; // @synthesize borderColor;
@property(nonatomic) double borderWidth; // @synthesize borderWidth;
@property(nonatomic) double shadowRadius; // @synthesize shadowRadius;
@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset;
@property(nonatomic) double shadowOpacity; // @synthesize shadowOpacity;
@property(nonatomic) struct CGColor *shadowColor; // @synthesize shadowColor;
@property(nonatomic, getter=isExclusiveTouch) _Bool exclusiveTouch; // @synthesize exclusiveTouch;
@property(nonatomic, getter=isUserInteractionEnabled) _Bool userInteractionEnabled; // @synthesize userInteractionEnabled;
@property(nonatomic) double rasterizationScale; // @synthesize rasterizationScale;
@property(nonatomic) double contentsScale; // @synthesize contentsScale;
@property(nonatomic) struct CGRect contentsCenter; // @synthesize contentsCenter;
@property(nonatomic) struct CGRect contentsRect; // @synthesize contentsRect;
@property(copy, nonatomic) NSString *contentsGravity; // @synthesize contentsGravity;
@property(retain, nonatomic) id contents; // @synthesize contents;
@property(nonatomic) struct CATransform3D sublayerTransform; // @synthesize sublayerTransform;
@property(nonatomic) struct CATransform3D transform; // @synthesize transform;
@property(nonatomic) double zPosition; // @synthesize zPosition;
@property(nonatomic) struct CGPoint position; // @synthesize position;
@property(nonatomic) struct CGPoint anchorPoint; // @synthesize anchorPoint;
@property(nonatomic) long long contentMode; // @synthesize contentMode;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius;
@property(nonatomic) double alpha; // @synthesize alpha;
@property(retain, nonatomic) UIColor *tintColor; // @synthesize tintColor;
@property(nonatomic) unsigned long long autoresizingMask; // @synthesize autoresizingMask;
@property(nonatomic) _Bool autoresizesSubviews; // @synthesize autoresizesSubviews;
@property(nonatomic) unsigned int edgeAntialiasingMask; // @synthesize edgeAntialiasingMask;
@property(nonatomic) _Bool allowsEdgeAntialiasing; // @synthesize allowsEdgeAntialiasing;
@property(nonatomic) _Bool allowsGroupOpacity; // @synthesize allowsGroupOpacity;
@property(nonatomic) _Bool needsDisplayOnBoundsChange; // @synthesize needsDisplayOnBoundsChange;
@property(nonatomic, getter=isHidden) _Bool hidden; // @synthesize hidden=isHidden;
@property(nonatomic) struct CGRect bounds; // @synthesize bounds;
@property(nonatomic) struct CGRect frame; // @synthesize frame;
@property(nonatomic, getter=isOpaque) _Bool opaque; // @synthesize opaque;
@property(nonatomic) _Bool clipsToBounds; // @synthesize clipsToBounds;
- (void).cxx_destruct;
- (void)dealloc;
@property(readonly, nonatomic) _Bool hasChanges;
@property(readonly, nonatomic) _Bool hasSetNeedsDisplay;
@property(readonly, nonatomic) _Bool hasSetNeedsLayout;
- (void)clearChanges;
- (void)applyToView:(id)arg1 withSpecialPropertiesHandling:(_Bool)arg2;
- (void)applyToLayer:(id)arg1;
- (void)setAccessibilityPath:(id)arg1;
- (id)accessibilityPath;
- (void)setAccessibilityActivationPoint:(struct CGPoint)arg1;
- (struct CGPoint)accessibilityActivationPoint;
- (void)setAccessibilityHeaderElements:(id)arg1;
- (id)accessibilityHeaderElements;
- (void)setAccessibilityNavigationStyle:(long long)arg1;
- (long long)accessibilityNavigationStyle;
@property(copy, nonatomic) NSString *accessibilityIdentifier;
- (void)setShouldGroupAccessibilityChildren:(_Bool)arg1;
- (_Bool)shouldGroupAccessibilityChildren;
- (void)setAccessibilityViewIsModal:(_Bool)arg1;
- (_Bool)accessibilityViewIsModal;
- (void)setAccessibilityElementsHidden:(_Bool)arg1;
- (_Bool)accessibilityElementsHidden;
- (void)setAccessibilityLanguage:(id)arg1;
- (id)accessibilityLanguage;
- (void)setAccessibilityFrame:(struct CGRect)arg1;
- (struct CGRect)accessibilityFrame;
- (void)setAccessibilityTraits:(unsigned long long)arg1;
- (unsigned long long)accessibilityTraits;
- (void)setAccessibilityAttributedValue:(id)arg1;
- (id)accessibilityAttributedValue;
- (void)setAccessibilityValue:(id)arg1;
- (id)accessibilityValue;
- (void)setAccessibilityAttributedHint:(id)arg1;
- (id)accessibilityAttributedHint;
- (void)setAccessibilityHint:(id)arg1;
- (id)accessibilityHint;
- (void)setAccessibilityAttributedLabel:(id)arg1;
- (id)accessibilityAttributedLabel;
- (void)setAccessibilityLabel:(id)arg1;
- (id)accessibilityLabel;
- (void)setIsAccessibilityElement:(_Bool)arg1;
- (_Bool)isAccessibilityElement;
- (void)setAccessibilityCustomActions:(id)arg1;
@property(nonatomic) struct CGColor *backgroundColor; // @synthesize backgroundColor;
- (void)layoutIfNeeded;
- (void)setNeedsLayout;
- (void)setNeedsDisplay;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _ASTransitionContext : NSObject <ASContextTransitioning>
{
    _Bool _animated;
    id <_ASTransitionContextLayoutDelegate> _layoutDelegate;
    id <_ASTransitionContextCompletionDelegate> _completionDelegate;
}

@property(nonatomic) __weak id <_ASTransitionContextCompletionDelegate> completionDelegate; // @synthesize completionDelegate=_completionDelegate;
@property(nonatomic) __weak id <_ASTransitionContextLayoutDelegate> layoutDelegate; // @synthesize layoutDelegate=_layoutDelegate;
@property(readonly, nonatomic, getter=isAnimated) _Bool animated; // @synthesize animated=_animated;
- (void).cxx_destruct;
- (void)completeTransition:(_Bool)arg1;
- (id)removedSubnodes;
- (id)insertedSubnodes;
- (id)subnodesForKey:(id)arg1;
- (struct CGRect)finalFrameForNode:(id)arg1;
- (struct CGRect)initialFrameForNode:(id)arg1;
- (CDStruct_42a63532)constrainedSizeForKey:(id)arg1;
- (id)layoutForKey:(id)arg1;
- (id)initWithAnimation:(_Bool)arg1 layoutDelegate:(id)arg2 completionDelegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _ASAnimatedTransitionContext : NSObject
{
    ASDisplayNode *_node;
    double _alpha;
}

+ (id)contextForNode:(id)arg1 alpha:(double)arg2;
@property(nonatomic) double alpha; // @synthesize alpha=_alpha;
@property(retain, nonatomic) ASDisplayNode *node; // @synthesize node=_node;
- (void).cxx_destruct;

@end

@interface NSString (PIDebugBox)
+ (id)debugbox_stringWithString:(id)arg1 repeatedCount:(unsigned long long)arg2;
- (id)debugbox_stringByAddingPadding:(id)arg1 count:(unsigned long long)arg2 location:(unsigned long long)arg3;
@end

@interface NSArray (ASCollections)
+ (id)arrayByTransferring:(id *)arg1 count:(unsigned long long)arg2;
+ (CDUnknownBlockType)defaultCompareBlock;
- (id)_asdk_commonIndexesWithArray:(id)arg1 compareBlock:(CDUnknownBlockType)arg2;
- (void)asdk_diffWithArray:(id)arg1 insertions:(id *)arg2 deletions:(id *)arg3 moves:(id *)arg4 compareBlock:(CDUnknownBlockType)arg5;
- (void)asdk_diffWithArray:(id)arg1 insertions:(id *)arg2 deletions:(id *)arg3 moves:(id *)arg4;
- (void)asdk_diffWithArray:(id)arg1 insertions:(id *)arg2 deletions:(id *)arg3 compareBlock:(CDUnknownBlockType)arg4;
- (void)asdk_diffWithArray:(id)arg1 insertions:(id *)arg2 deletions:(id *)arg3;
@end

@interface UIView (ASDisplayNodeInternal) <ASAsyncTransactionContainer>
@property __weak ASDisplayNode *asyncdisplaykit_node;
- (void)addSubnode:(id)arg1;
@property(retain, nonatomic, setter=asyncdisplaykit_setCurrentAsyncTransaction:) _ASAsyncTransaction *asyncdisplaykit_currentAsyncTransaction;
- (void)asyncdisplaykit_asyncTransactionContainerStateDidChange;
- (void)asyncdisplaykit_cancelAsyncTransactions;
@property(readonly, nonatomic) unsigned long long asyncdisplaykit_asyncTransactionContainerState;
@property(nonatomic, getter=asyncdisplaykit_isAsyncTransactionContainer, setter=asyncdisplaykit_setAsyncTransactionContainer:) _Bool asyncdisplaykit_asyncTransactionContainer;
@end

@interface CALayer (ASDisplayNodeInternal) <ASAsyncTransactionContainer>
+ (_Bool)needsMainThreadDeallocation;
@property __weak ASDisplayNode *asyncdisplaykit_node;
- (void)addSubnode:(id)arg1;
@property(nonatomic, setter=as_setAllowsHighlightDrawing:) _Bool as_allowsHighlightDrawing;
- (void)asyncdisplaykit_asyncTransactionContainerDidCompleteTransaction:(id)arg1;
- (void)asyncdisplaykit_asyncTransactionContainerWillBeginTransaction:(id)arg1;
@property(readonly, nonatomic) CALayer *asyncdisplaykit_parentTransactionContainer;
@property(readonly, nonatomic) _ASAsyncTransaction *asyncdisplaykit_asyncTransaction;
- (void)asyncdisplaykit_cancelAsyncTransactions;
@property(readonly, nonatomic) unsigned long long asyncdisplaykit_asyncTransactionContainerState;

// Remaining properties
@property(retain, nonatomic, setter=asyncdisplaykit_setAsyncLayerTransactions:) NSHashTable *asyncdisplaykit_asyncLayerTransactions; // @dynamic asyncdisplaykit_asyncLayerTransactions;
@property(nonatomic, getter=asyncdisplaykit_isAsyncTransactionContainer, setter=asyncdisplaykit_setAsyncTransactionContainer:) _Bool asyncdisplaykit_asyncTransactionContainer; // @dynamic asyncdisplaykit_asyncTransactionContainer;
@property(retain, nonatomic, setter=asyncdisplaykit_setCurrentAsyncTransaction:) _ASAsyncTransaction *asyncdisplaykit_currentAsyncTransaction; // @dynamic asyncdisplaykit_currentAsyncTransaction;
@end

@interface UIImage (ASImageContainerProtocol) <ASImageContainerProtocol>
+ (_Bool)needsMainThreadDeallocation;
+ (id)as_imageNamed:(id)arg1 compatibleWithTraitCollection:(id)arg2;
+ (id)as_imageNamed:(id)arg1;
+ (id)as_resizableRoundedImageWithCornerRadius:(double)arg1 cornerColor:(id)arg2 fillColor:(id)arg3 borderColor:(id)arg4 borderWidth:(double)arg5 roundedCorners:(unsigned long long)arg6 scale:(double)arg7;
+ (id)as_resizableRoundedImageWithCornerRadius:(double)arg1 cornerColor:(id)arg2 fillColor:(id)arg3 borderColor:(id)arg4 borderWidth:(double)arg5;
+ (id)as_resizableRoundedImageWithCornerRadius:(double)arg1 cornerColor:(id)arg2 fillColor:(id)arg3;
- (id)asdk_animatedImageData;
- (id)asdk_image;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSData (ASImageContainerProtocol) <ASImageContainerProtocol>
- (id)asdk_animatedImageData;
- (id)asdk_image;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSIndexPath (ASInverseComparison)
- (long long)asdk_inverseCompare:(id)arg1;
@end

@interface NSObject (ASMainThreadIvarTeardown)
+ (id)_ivarsThatMayNeedMainDeallocation;
+ (_Bool)needsMainThreadDeallocation;
- (void)scheduleIvarsForMainThreadDeallocation;
@end

@interface UIColor (ASNeedsMainThreadDeallocation)
+ (_Bool)needsMainThreadDeallocation;
@end

@interface UIGestureRecognizer (ASNeedsMainThreadDeallocation)
+ (_Bool)needsMainThreadDeallocation;
@end

@interface UIResponder (ASNeedsMainThreadDeallocation)
+ (_Bool)needsMainThreadDeallocation;
- (id)asdk_responderChainEnumerator;
@property(readonly, nonatomic) UIViewController *asdk_associatedViewController;
@end

@interface NSProxy (ASNeedsMainThreadDeallocation)
+ (_Bool)needsMainThreadDeallocation;
@end

@interface NSParagraphStyle (ASTextKitCoreTextAdditions)
+ (id)paragraphStyleWithCTParagraphStyle:(struct __CTParagraphStyle *)arg1;
+ (id)as_styleWithCTStyle:(struct __CTParagraphStyle *)arg1;
- (const struct __CTParagraphStyle *)as_CTStyle;
@end

@interface NSAttributedString (ASText)
+ (id)as_attachmentStringWithEmojiImage:(id)arg1 fontSize:(double)arg2;
+ (id)as_attachmentStringWithContent:(id)arg1 contentMode:(long long)arg2 attachmentSize:(struct CGSize)arg3 alignToFont:(id)arg4 alignment:(long long)arg5;
+ (id)as_attachmentStringWithContent:(id)arg1 contentMode:(long long)arg2 width:(double)arg3 ascent:(double)arg4 descent:(double)arg5;
- (_Bool)as_canDrawWithUIKit;
- (_Bool)as_isSharedAttributesInAllRange;
- (struct _NSRange)as_rangeOfAll;
- (id)as_plainTextForRange:(struct _NSRange)arg1;
- (struct CGAffineTransform)as_textGlyphTransformAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) struct CGAffineTransform as_textGlyphTransform;
- (id)as_textBackgroundBorderAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) ASTextBorder *as_textBackgroundBorder;
- (id)as_textBorderAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) ASTextBorder *as_textBorder;
- (id)as_textStrikethroughAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) ASTextDecoration *as_textStrikethrough;
- (id)as_textUnderlineAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) ASTextDecoration *as_textUnderline;
- (id)as_textInnerShadowAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) ASTextShadow *as_textInnerShadow;
- (id)as_textShadowAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) ASTextShadow *as_textShadow;
- (id)as_tabStopsAtIndex:(unsigned long long)arg1;
- (double)as_defaultTabIntervalAtIndex:(unsigned long long)arg1;
- (float)as_hyphenationFactorAtIndex:(unsigned long long)arg1;
- (long long)as_baseWritingDirectionAtIndex:(unsigned long long)arg1;
- (double)as_lineHeightMultipleAtIndex:(unsigned long long)arg1;
- (double)as_maximumLineHeightAtIndex:(unsigned long long)arg1;
- (double)as_minimumLineHeightAtIndex:(unsigned long long)arg1;
- (double)as_tailIndentAtIndex:(unsigned long long)arg1;
- (double)as_headIndentAtIndex:(unsigned long long)arg1;
- (double)as_firstLineHeadIndentAtIndex:(unsigned long long)arg1;
- (double)as_paragraphSpacingBeforeAtIndex:(unsigned long long)arg1;
- (double)as_paragraphSpacingAtIndex:(unsigned long long)arg1;
- (double)as_lineSpacingAtIndex:(unsigned long long)arg1;
- (long long)as_lineBreakModeAtIndex:(unsigned long long)arg1;
- (long long)as_alignmentAtIndex:(unsigned long long)arg1;
@property(readonly, copy, nonatomic) NSArray *as_tabStops;
@property(readonly, nonatomic) double as_defaultTabInterval;
@property(readonly, nonatomic) float as_hyphenationFactor;
@property(readonly, nonatomic) long long as_baseWritingDirection;
@property(readonly, nonatomic) double as_lineHeightMultiple;
@property(readonly, nonatomic) double as_maximumLineHeight;
@property(readonly, nonatomic) double as_minimumLineHeight;
@property(readonly, nonatomic) double as_tailIndent;
@property(readonly, nonatomic) double as_headIndent;
@property(readonly, nonatomic) double as_firstLineHeadIndent;
@property(readonly, nonatomic) double as_paragraphSpacingBefore;
@property(readonly, nonatomic) double as_paragraphSpacing;
@property(readonly, nonatomic) double as_lineSpacing;
@property(readonly, nonatomic) long long as_lineBreakMode;
@property(readonly, nonatomic) long long as_alignment;
- (id)as_paragraphStyleAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSParagraphStyle *as_paragraphStyle;
- (id)as_writingDirectionAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSArray *as_writingDirection;
- (id)as_languageAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSString *as_language;
- (_Bool)as_verticalGlyphFormAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) _Bool as_verticalGlyphForm;
- (id)as_baselineOffsetAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSNumber *as_baselineOffset;
- (id)as_expansionAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSNumber *as_expansion;
- (id)as_obliquenessAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSNumber *as_obliqueness;
- (id)as_textEffectAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSString *as_textEffect;
- (id)as_ligatureAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSNumber *as_ligature;
- (id)as_underlineColorAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) UIColor *as_underlineColor;
- (long long)as_underlineStyleAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) long long as_underlineStyle;
- (id)as_strikethroughColorAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) UIColor *as_strikethroughColor;
- (long long)as_strikethroughStyleAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) long long as_strikethroughStyle;
- (id)as_shadowAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSShadow *as_shadow;
- (id)as_strokeColorAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) UIColor *as_strokeColor;
- (id)as_strokeWidthAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSNumber *as_strokeWidth;
- (id)as_backgroundColorAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) UIColor *as_backgroundColor;
- (id)as_colorAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) UIColor *as_color;
- (id)as_kernAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSNumber *as_kern;
- (id)as_fontAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) UIFont *as_font;
@property(readonly, copy, nonatomic) NSDictionary *as_attributes;
- (id)as_attribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)as_attributesAtIndex:(unsigned long long)arg1;
@end

@interface NSMutableAttributedString (ASText)
+ (id)as_allDiscontinuousAttributeKeys;
- (void)as_removeDiscontinuousAttributesInRange:(struct _NSRange)arg1;
- (void)as_appendString:(id)arg1;
- (void)as_insertString:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)as_setTextHighlightRange:(struct _NSRange)arg1 color:(id)arg2 backgroundColor:(id)arg3 userInfo:(id)arg4;
- (void)as_setTextHighlightRange:(struct _NSRange)arg1 color:(id)arg2 backgroundColor:(id)arg3 tapAction:(CDUnknownBlockType)arg4;
- (void)as_setTextHighlightRange:(struct _NSRange)arg1 color:(id)arg2 backgroundColor:(id)arg3 userInfo:(id)arg4 tapAction:(CDUnknownBlockType)arg5 longPressAction:(CDUnknownBlockType)arg6;
- (void)as_setTextGlyphTransform:(struct CGAffineTransform)arg1 range:(struct _NSRange)arg2;
- (void)as_setTextBlockBorder:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setTextHighlight:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setTextAttachment:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setTextBackgroundBorder:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setTextBorder:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setTextStrikethrough:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setTextUnderline:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setTextInnerShadow:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setTextShadow:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setTextBinding:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setTextBackedString:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setLink:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setAttachment:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setRubyAnnotation:(struct __CTRubyAnnotation *)arg1 range:(struct _NSRange)arg2;
- (void)as_setBaselineReferenceInfo:(struct __CFDictionary *)arg1 range:(struct _NSRange)arg2;
- (void)as_setBaselineInfo:(struct __CFDictionary *)arg1 range:(struct _NSRange)arg2;
- (void)as_setBaselineClass:(struct __CFString *)arg1 range:(struct _NSRange)arg2;
- (void)as_setRunDelegate:(struct __CTRunDelegate *)arg1 range:(struct _NSRange)arg2;
- (void)as_setCharacterShape:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setGlyphInfo:(struct __CTGlyphInfo *)arg1 range:(struct _NSRange)arg2;
- (void)as_setSuperscript:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setTabStops:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setDefaultTabInterval:(double)arg1 range:(struct _NSRange)arg2;
- (void)as_setHyphenationFactor:(float)arg1 range:(struct _NSRange)arg2;
- (void)as_setLineHeightMultiple:(double)arg1 range:(struct _NSRange)arg2;
- (void)as_setMaximumLineHeight:(double)arg1 range:(struct _NSRange)arg2;
- (void)as_setMinimumLineHeight:(double)arg1 range:(struct _NSRange)arg2;
- (void)as_setLineBreakMode:(long long)arg1 range:(struct _NSRange)arg2;
- (void)as_setTailIndent:(double)arg1 range:(struct _NSRange)arg2;
- (void)as_setHeadIndent:(double)arg1 range:(struct _NSRange)arg2;
- (void)as_setFirstLineHeadIndent:(double)arg1 range:(struct _NSRange)arg2;
- (void)as_setParagraphSpacingBefore:(double)arg1 range:(struct _NSRange)arg2;
- (void)as_setParagraphSpacing:(double)arg1 range:(struct _NSRange)arg2;
- (void)as_setLineSpacing:(double)arg1 range:(struct _NSRange)arg2;
- (void)as_setBaseWritingDirection:(long long)arg1 range:(struct _NSRange)arg2;
- (void)as_setAlignment:(long long)arg1 range:(struct _NSRange)arg2;
- (void)as_setParagraphStyle:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setWritingDirection:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setLanguage:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setVerticalGlyphForm:(_Bool)arg1 range:(struct _NSRange)arg2;
- (void)as_setBaselineOffset:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setExpansion:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setObliqueness:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setTextEffect:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setLigature:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setUnderlineColor:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setUnderlineStyle:(long long)arg1 range:(struct _NSRange)arg2;
- (void)as_setStrikethroughColor:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setStrikethroughStyle:(long long)arg1 range:(struct _NSRange)arg2;
- (void)as_setShadow:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setStrokeColor:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setStrokeWidth:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setBackgroundColor:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setColor:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setKern:(id)arg1 range:(struct _NSRange)arg2;
- (void)as_setFont:(id)arg1 range:(struct _NSRange)arg2;
@property(nonatomic) struct CGAffineTransform as_textGlyphTransform;
@property(retain, nonatomic) ASTextBorder *as_textBackgroundBorder;
@property(retain, nonatomic) ASTextBorder *as_textBorder;
@property(retain, nonatomic) ASTextDecoration *as_textStrikethrough;
@property(retain, nonatomic) ASTextDecoration *as_textUnderline;
@property(retain, nonatomic) ASTextShadow *as_textInnerShadow;
@property(retain, nonatomic) ASTextShadow *as_textShadow;
@property(copy, nonatomic) NSArray *as_tabStops;
@property(nonatomic) double as_defaultTabInterval;
@property(nonatomic) float as_hyphenationFactor;
@property(nonatomic) double as_lineHeightMultiple;
@property(nonatomic) double as_maximumLineHeight;
@property(nonatomic) double as_minimumLineHeight;
@property(nonatomic) long long as_lineBreakMode;
@property(nonatomic) double as_tailIndent;
@property(nonatomic) double as_headIndent;
@property(nonatomic) double as_firstLineHeadIndent;
@property(nonatomic) double as_paragraphSpacingBefore;
@property(nonatomic) double as_paragraphSpacing;
@property(nonatomic) double as_lineSpacing;
@property(nonatomic) long long as_baseWritingDirection;
@property(nonatomic) long long as_alignment;
@property(retain, nonatomic) NSParagraphStyle *as_paragraphStyle;
@property(retain, nonatomic) NSArray *as_writingDirection;
@property(retain, nonatomic) NSString *as_language;
@property(nonatomic) _Bool as_verticalGlyphForm;
@property(retain, nonatomic) NSNumber *as_baselineOffset;
@property(retain, nonatomic) NSNumber *as_expansion;
@property(retain, nonatomic) NSNumber *as_obliqueness;
@property(retain, nonatomic) NSString *as_textEffect;
@property(retain, nonatomic) NSNumber *as_ligature;
@property(retain, nonatomic) UIColor *as_underlineColor;
@property(nonatomic) long long as_underlineStyle;
@property(retain, nonatomic) UIColor *as_strikethroughColor;
@property(nonatomic) long long as_strikethroughStyle;
@property(retain, nonatomic) NSShadow *as_shadow;
@property(retain, nonatomic) UIColor *as_strokeColor;
@property(retain, nonatomic) NSNumber *as_strokeWidth;
@property(retain, nonatomic) UIColor *as_backgroundColor;
@property(retain, nonatomic) UIColor *as_color;
@property(retain, nonatomic) NSNumber *as_kern;
@property(retain, nonatomic) UIFont *as_font;
- (void)as_removeAttributesInRange:(struct _NSRange)arg1;
- (void)as_setAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (void)as_setAttribute:(id)arg1 value:(id)arg2;
- (void)setAs_attributes:(id)arg1;
- (void)as_setAttributes:(id)arg1;
- (void)attributeTextInRange:(struct _NSRange)arg1 withTextKitParagraphStyle:(id)arg2;
- (void)attributeTextInRange:(struct _NSRange)arg1 withTextKitLineHeight:(double)arg2;
- (void)attributeTextInRange:(struct _NSRange)arg1 withTextKitMinimumLineHeight:(double)arg2 maximumLineHeight:(double)arg3;
- (void)attributeTextInRange:(struct _NSRange)arg1 withTextKitMinimumLineHeight:(double)arg2;
@end

@interface NSIndexSet (ASHelpers)
+ (id)as_sectionsFromIndexPaths:(id)arg1;
+ (id)as_indexSetFromIndexPaths:(id)arg1 inSection:(unsigned long long)arg2;
- (id)as_smallDescription;
- (unsigned long long)as_indexChangeByInsertingItemsBelowIndex:(unsigned long long)arg1;
- (id)as_intersectionWithIndexes:(id)arg1;
- (id)as_indexesByMapping:(CDUnknownBlockType)arg1;
@end

